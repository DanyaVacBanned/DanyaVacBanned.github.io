{"version":3,"file":"static/js/488.525c80d2.chunk.js","mappings":"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","sources":["webpack://notes/./node_modules/@kurkle/color/dist/color.esm.js","webpack://notes/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://notes/./node_modules/chart.js/dist/chart.js","webpack://notes/./node_modules/swiper/shared/create-element-if-not-defined.mjs","webpack://notes/./node_modules/swiper/modules/navigation.mjs","webpack://notes/./node_modules/swiper/shared/classes-to-selector.mjs","webpack://notes/./node_modules/swiper/modules/pagination.mjs","webpack://notes/./node_modules/swiper/modules/a11y.mjs","webpack://notes/./node_modules/swiper/modules/autoplay.mjs","webpack://notes/./node_modules/swiper/shared/ssr-window.esm.mjs","webpack://notes/./node_modules/swiper/shared/utils.mjs","webpack://notes/./node_modules/swiper/shared/swiper-core.mjs","webpack://notes/./node_modules/swiper/shared/update-swiper.mjs","webpack://notes/./node_modules/swiper/swiper-react.mjs","webpack://notes/./node_modules/swiper/shared/update-on-virtual-data.mjs"],"sourcesContent":["/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.3.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.3.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.3.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import { e as elementChildren, c as createElement } from './utils.mjs';\n\nfunction createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\n        if (!element) {\n          element = createElement('div', checkProps[key]);\n          element.className = checkProps[key];\n          swiper.el.append(element);\n        }\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n  return params;\n}\n\nexport { createElementIfNotDefined as c };\n","import { c as createElementIfNotDefined } from '../shared/create-element-if-not-defined.mjs';\n\nfunction Navigation(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    prevEl: null\n  };\n  const makeElementsArray = el => (Array.isArray(el) ? el : [el]).filter(e => !!e);\n  function getEl(el) {\n    let res;\n    if (el && typeof el === 'string' && swiper.isElement) {\n      res = swiper.el.querySelector(el);\n      if (res) return res;\n    }\n    if (el) {\n      if (typeof el === 'string') res = [...document.querySelectorAll(el)];\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\n        res = swiper.el.querySelector(el);\n      }\n    }\n    if (el && !res) return el;\n    // if (Array.isArray(res) && res.length === 1) res = res[0];\n    return res;\n  }\n  function toggleEl(el, disabled) {\n    const params = swiper.params.navigation;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (subEl) {\n        subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\n        if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n        }\n      }\n    });\n  }\n  function update() {\n    // Update Navigation Buttons\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (swiper.params.loop) {\n      toggleEl(prevEl, false);\n      toggleEl(nextEl, false);\n      return;\n    }\n    toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    let nextEl = getEl(params.nextEl);\n    let prevEl = getEl(params.prevEl);\n    Object.assign(swiper.navigation, {\n      nextEl,\n      prevEl\n    });\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const initButton = (el, dir) => {\n      if (el) {\n        el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      }\n      if (!swiper.enabled && el) {\n        el.classList.add(...params.lockClass.split(' '));\n      }\n    };\n    nextEl.forEach(el => initButton(el, 'next'));\n    prevEl.forEach(el => initButton(el, 'prev'));\n  }\n  function destroy() {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const destroyButton = (el, dir) => {\n      el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\n    };\n    nextEl.forEach(el => destroyButton(el, 'next'));\n    prevEl.forEach(el => destroyButton(el, 'prev'));\n  }\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.navigation.lockClass));\n  });\n  on('click', (_s, e) => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const targetEl = e.target;\n    if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n      if (nextEl.length) {\n        isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      } else if (prevEl.length) {\n        isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      }\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n      [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    init();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    destroy();\n  };\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}\n\nexport { Navigation as default };\n","function classesToSelector(classes) {\n  if (classes === void 0) {\n    classes = '';\n  }\n  return `.${classes.trim().replace(/([\\.:!+\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n}\n\nexport { classesToSelector as c };\n","import { c as classesToSelector } from '../shared/classes-to-selector.mjs';\nimport { c as createElementIfNotDefined } from '../shared/create-element-if-not-defined.mjs';\nimport { f as elementOuterSize, g as elementIndex, a as elementParents } from '../shared/utils.mjs';\n\nfunction Pagination(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n      paginationDisabledClass: `${pfx}-disabled`\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    bullets: []\n  };\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n  const makeElementsArray = el => (Array.isArray(el) ? el : [el]).filter(e => !!e);\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\n  }\n  function setSideBullets(bulletEl, position) {\n    const {\n      bulletActiveClass\n    } = swiper.params.pagination;\n    if (!bulletEl) return;\n    bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n    if (bulletEl) {\n      bulletEl.classList.add(`${bulletActiveClass}-${position}`);\n      bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n      if (bulletEl) {\n        bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);\n      }\n    }\n  }\n  function onBulletClick(e) {\n    const bulletEl = e.target.closest(classesToSelector(swiper.params.pagination.bulletClass));\n    if (!bulletEl) {\n      return;\n    }\n    e.preventDefault();\n    const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;\n    if (swiper.params.loop) {\n      if (swiper.realIndex === index) return;\n      const newSlideIndex = swiper.getSlideIndexByData(index);\n      const currentSlideIndex = swiper.getSlideIndexByData(swiper.realIndex);\n      if (newSlideIndex > swiper.slides.length - swiper.loopedSlides) {\n        swiper.loopFix({\n          direction: newSlideIndex > currentSlideIndex ? 'next' : 'prev',\n          activeSlideIndex: newSlideIndex,\n          slideTo: false\n        });\n      }\n      swiper.slideToLoop(index);\n    } else {\n      swiper.slideTo(index);\n    }\n  }\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    // Current/Total\n    let current;\n    let previousIndex;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      previousIndex = swiper.previousRealIndex || 0;\n      current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n      previousIndex = swiper.previousSnapIndex;\n    } else {\n      previousIndex = swiper.previousIndex || 0;\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\n        el.forEach(subEl => {\n          subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;\n        });\n        if (params.dynamicMainBullets > 1 && previousIndex !== undefined) {\n          dynamicBulletIndex += current - (previousIndex || 0);\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.forEach(bulletEl => {\n        const classesToRemove = [...['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`)].map(s => typeof s === 'string' && s.includes(' ') ? s.split(' ') : s).flat();\n        bulletEl.classList.remove(...classesToRemove);\n      });\n      if (el.length > 1) {\n        bullets.forEach(bullet => {\n          const bulletIndex = elementIndex(bullet);\n          if (bulletIndex === current) {\n            bullet.classList.add(...params.bulletActiveClass.split(' '));\n          } else if (swiper.isElement) {\n            bullet.setAttribute('part', 'bullet');\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              bullet.classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n            if (bulletIndex === firstIndex) {\n              setSideBullets(bullet, 'prev');\n            }\n            if (bulletIndex === lastIndex) {\n              setSideBullets(bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const bullet = bullets[current];\n        if (bullet) {\n          bullet.classList.add(...params.bulletActiveClass.split(' '));\n        }\n        if (swiper.isElement) {\n          bullets.forEach((bulletEl, bulletIndex) => {\n            bulletEl.setAttribute('part', bulletIndex === current ? 'bullet-active' : 'bullet');\n          });\n        }\n        if (params.dynamicBullets) {\n          const firstDisplayedBullet = bullets[firstIndex];\n          const lastDisplayedBullet = bullets[lastIndex];\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            if (bullets[i]) {\n              bullets[i].classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n          }\n          setSideBullets(firstDisplayedBullet, 'prev');\n          setSideBullets(lastDisplayedBullet, 'next');\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.forEach(bullet => {\n          bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = `${bulletsOffset}px`;\n        });\n      }\n    }\n    el.forEach((subEl, subElIndex) => {\n      if (params.type === 'fraction') {\n        subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(fractionEl => {\n          fractionEl.textContent = params.formatFractionCurrent(current + 1);\n        });\n        subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(totalEl => {\n          totalEl.textContent = params.formatFractionTotal(total);\n        });\n      }\n      if (params.type === 'progressbar') {\n        let progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        const scale = (current + 1) / total;\n        let scaleX = 1;\n        let scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(progressEl => {\n          progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;\n          progressEl.style.transitionDuration = `${swiper.params.speed}ms`;\n        });\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\n        if (subElIndex === 0) emit('paginationRender', subEl);\n      } else {\n        if (subElIndex === 0) emit('paginationRender', subEl);\n        emit('paginationUpdate', subEl);\n      }\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n      }\n    });\n  }\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          // prettier-ignore\n          paginationHTML += `<${params.bulletElement} ${swiper.isElement ? 'part=\"bullet\"' : ''} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n      }\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n    }\n    swiper.pagination.bullets = [];\n    el.forEach(subEl => {\n      if (params.type !== 'custom') {\n        subEl.innerHTML = paginationHTML || '';\n      }\n      if (params.type === 'bullets') {\n        swiper.pagination.bullets.push(...subEl.querySelectorAll(classesToSelector(params.bulletClass)));\n      }\n    });\n    if (params.type !== 'custom') {\n      emit('paginationRender', el[0]);\n    }\n  }\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = [...document.querySelectorAll(params.el)];\n    }\n    if (!el) {\n      el = params.el;\n    }\n    if (!el || el.length === 0) return;\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\n      el = [...swiper.el.querySelectorAll(params.el)];\n      // check if it belongs to another nested Swiper\n      if (el.length > 1) {\n        el = el.filter(subEl => {\n          if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\n          return true;\n        })[0];\n      }\n    }\n    if (Array.isArray(el) && el.length === 1) el = el[0];\n    Object.assign(swiper.pagination, {\n      el\n    });\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (params.type === 'bullets' && params.clickable) {\n        subEl.classList.add(params.clickableClass);\n      }\n      subEl.classList.add(params.modifierClass + params.type);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);\n        dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        subEl.classList.add(params.progressbarOppositeClass);\n      }\n      if (params.clickable) {\n        subEl.addEventListener('click', onBulletClick);\n      }\n      if (!swiper.enabled) {\n        subEl.classList.add(params.lockClass);\n      }\n    });\n  }\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => {\n        subEl.classList.remove(params.hiddenClass);\n        subEl.classList.remove(params.modifierClass + params.type);\n        subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        if (params.clickable) {\n          subEl.removeEventListener('click', onBulletClick);\n        }\n      });\n    }\n    if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(subEl => subEl.classList.remove(...params.bulletActiveClass.split(' ')));\n  }\n  on('changeDirection', () => {\n    if (!swiper.pagination || !swiper.pagination.el) return;\n    const params = swiper.params.pagination;\n    let {\n      el\n    } = swiper.pagination;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.classList.remove(params.horizontalClass, params.verticalClass);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    });\n  });\n  on('init', () => {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', () => {\n    if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    update();\n  });\n  on('snapGridLengthChange', () => {\n    render();\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass));\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    const el = makeElementsArray(swiper.pagination.el);\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n      el.forEach(subEl => subEl.classList.toggle(swiper.params.pagination.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));\n    }\n    init();\n    render();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));\n    }\n    destroy();\n  };\n  Object.assign(swiper.pagination, {\n    enable,\n    disable,\n    render,\n    update,\n    init,\n    destroy\n  });\n}\n\nexport { Pagination as default };\n","import { c as classesToSelector } from '../shared/classes-to-selector.mjs';\nimport { c as createElement, g as elementIndex } from '../shared/utils.mjs';\n\nfunction A11y(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n      slideLabelMessage: '{{index}} / {{slidesLength}}',\n      containerMessage: null,\n      containerRoleDescriptionMessage: null,\n      itemRoleDescriptionMessage: null,\n      slideRole: 'group',\n      id: null\n    }\n  });\n  swiper.a11y = {\n    clicked: false\n  };\n  let liveRegion = null;\n  function notify(message) {\n    const notification = liveRegion;\n    if (notification.length === 0) return;\n    notification.innerHTML = '';\n    notification.innerHTML = message;\n  }\n  const makeElementsArray = el => (Array.isArray(el) ? el : [el]).filter(e => !!e);\n  function getRandomNumber(size) {\n    if (size === void 0) {\n      size = 16;\n    }\n    const randomChar = () => Math.round(16 * Math.random()).toString(16);\n    return 'x'.repeat(size).replace(/x/g, randomChar);\n  }\n  function makeElFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '0');\n    });\n  }\n  function makeElNotFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '-1');\n    });\n  }\n  function addElRole(el, role) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('role', role);\n    });\n  }\n  function addElRoleDescription(el, description) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-roledescription', description);\n    });\n  }\n  function addElControls(el, controls) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-controls', controls);\n    });\n  }\n  function addElLabel(el, label) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-label', label);\n    });\n  }\n  function addElId(el, id) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('id', id);\n    });\n  }\n  function addElLive(el, live) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-live', live);\n    });\n  }\n  function disableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', true);\n    });\n  }\n  function enableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', false);\n    });\n  }\n  function onEnterOrSpaceKey(e) {\n    if (e.keyCode !== 13 && e.keyCode !== 32) return;\n    const params = swiper.params.a11y;\n    const targetEl = e.target;\n    if (swiper.pagination && swiper.pagination.el && (targetEl === swiper.pagination.el || swiper.pagination.el.contains(e.target))) {\n      if (!e.target.matches(classesToSelector(swiper.params.pagination.bulletClass))) return;\n    }\n    if (swiper.navigation && swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        notify(params.lastSlideMessage);\n      } else {\n        notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        notify(params.firstSlideMessage);\n      } else {\n        notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && targetEl.matches(classesToSelector(swiper.params.pagination.bulletClass))) {\n      targetEl.click();\n    }\n  }\n  function updateNavigation() {\n    if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (prevEl) {\n      if (swiper.isBeginning) {\n        disableEl(prevEl);\n        makeElNotFocusable(prevEl);\n      } else {\n        enableEl(prevEl);\n        makeElFocusable(prevEl);\n      }\n    }\n    if (nextEl) {\n      if (swiper.isEnd) {\n        disableEl(nextEl);\n        makeElNotFocusable(nextEl);\n      } else {\n        enableEl(nextEl);\n        makeElFocusable(nextEl);\n      }\n    }\n  }\n  function hasPagination() {\n    return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n  }\n  function hasClickablePagination() {\n    return hasPagination() && swiper.params.pagination.clickable;\n  }\n  function updatePagination() {\n    const params = swiper.params.a11y;\n    if (!hasPagination()) return;\n    swiper.pagination.bullets.forEach(bulletEl => {\n      if (swiper.params.pagination.clickable) {\n        makeElFocusable(bulletEl);\n        if (!swiper.params.pagination.renderBullet) {\n          addElRole(bulletEl, 'button');\n          addElLabel(bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, elementIndex(bulletEl) + 1));\n        }\n      }\n      if (bulletEl.matches(classesToSelector(swiper.params.pagination.bulletActiveClass))) {\n        bulletEl.setAttribute('aria-current', 'true');\n      } else {\n        bulletEl.removeAttribute('aria-current');\n      }\n    });\n  }\n  const initNavEl = (el, wrapperId, message) => {\n    makeElFocusable(el);\n    if (el.tagName !== 'BUTTON') {\n      addElRole(el, 'button');\n      el.addEventListener('keydown', onEnterOrSpaceKey);\n    }\n    addElLabel(el, message);\n    addElControls(el, wrapperId);\n  };\n  const handlePointerDown = () => {\n    swiper.a11y.clicked = true;\n  };\n  const handlePointerUp = () => {\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        if (!swiper.destroyed) {\n          swiper.a11y.clicked = false;\n        }\n      });\n    });\n  };\n  const handleFocus = e => {\n    if (swiper.a11y.clicked) return;\n    const slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n    if (!slideEl || !swiper.slides.includes(slideEl)) return;\n    const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n    const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n    if (isActive || isVisible) return;\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n    if (swiper.isHorizontal()) {\n      swiper.el.scrollLeft = 0;\n    } else {\n      swiper.el.scrollTop = 0;\n    }\n    swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n  };\n  const initSlides = () => {\n    const params = swiper.params.a11y;\n    if (params.itemRoleDescriptionMessage) {\n      addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);\n    }\n    if (params.slideRole) {\n      addElRole(swiper.slides, params.slideRole);\n    }\n    const slidesLength = swiper.slides.length;\n    if (params.slideLabelMessage) {\n      swiper.slides.forEach((slideEl, index) => {\n        const slideIndex = swiper.params.loop ? parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10) : index;\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        addElLabel(slideEl, ariaLabelMessage);\n      });\n    }\n  };\n  const init = () => {\n    const params = swiper.params.a11y;\n    swiper.el.append(liveRegion);\n\n    // Container\n    const containerEl = swiper.el;\n    if (params.containerRoleDescriptionMessage) {\n      addElRoleDescription(containerEl, params.containerRoleDescriptionMessage);\n    }\n    if (params.containerMessage) {\n      addElLabel(containerEl, params.containerMessage);\n    }\n\n    // Wrapper\n    const wrapperEl = swiper.wrapperEl;\n    const wrapperId = params.id || wrapperEl.getAttribute('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n    const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n    addElId(wrapperEl, wrapperId);\n    addElLive(wrapperEl, live);\n\n    // Slide\n    initSlides();\n\n    // Navigation\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => initNavEl(el, wrapperId, params.nextSlideMessage));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => initNavEl(el, wrapperId, params.prevSlideMessage));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.addEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.addEventListener('focus', handleFocus, true);\n    swiper.el.addEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.addEventListener('pointerup', handlePointerUp, true);\n  };\n  function destroy() {\n    if (liveRegion) liveRegion.remove();\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.removeEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.removeEventListener('focus', handleFocus, true);\n    swiper.el.removeEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.removeEventListener('pointerup', handlePointerUp, true);\n  }\n  on('beforeInit', () => {\n    liveRegion = createElement('span', swiper.params.a11y.notificationClass);\n    liveRegion.setAttribute('aria-live', 'assertive');\n    liveRegion.setAttribute('aria-atomic', 'true');\n  });\n  on('afterInit', () => {\n    if (!swiper.params.a11y.enabled) return;\n    init();\n  });\n  on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\n    if (!swiper.params.a11y.enabled) return;\n    initSlides();\n  });\n  on('fromEdge toEdge afterInit lock unlock', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updateNavigation();\n  });\n  on('paginationUpdate', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updatePagination();\n  });\n  on('destroy', () => {\n    if (!swiper.params.a11y.enabled) return;\n    destroy();\n  });\n}\n\nexport { A11y as default };\n","import { g as getDocument } from '../shared/ssr-window.esm.mjs';\n\n/* eslint no-underscore-dangle: \"off\" */\n/* eslint no-use-before-define: \"off\" */\nfunction Autoplay(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit,\n    params\n  } = _ref;\n  swiper.autoplay = {\n    running: false,\n    paused: false,\n    timeLeft: 0\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n  let timeout;\n  let raf;\n  let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayTimeLeft;\n  let autoplayStartTime = new Date().getTime;\n  let wasPaused;\n  let isTouched;\n  let pausedByTouch;\n  let touchStartTimeout;\n  let slideChanged;\n  let pausedByInteraction;\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n    if (e.target !== swiper.wrapperEl) return;\n    swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\n    resume();\n  }\n  const calcTimeLeft = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) {\n      wasPaused = true;\n    } else if (wasPaused) {\n      autoplayDelayCurrent = autoplayTimeLeft;\n      wasPaused = false;\n    }\n    const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n    swiper.autoplay.timeLeft = timeLeft;\n    emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\n    raf = requestAnimationFrame(() => {\n      calcTimeLeft();\n    });\n  };\n  const getSlideDelay = () => {\n    let activeSlideEl;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      activeSlideEl = swiper.slides.filter(slideEl => slideEl.classList.contains('swiper-slide-active'))[0];\n    } else {\n      activeSlideEl = swiper.slides[swiper.activeIndex];\n    }\n    if (!activeSlideEl) return undefined;\n    const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\n    return currentSlideDelay;\n  };\n  const run = delayForce => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    cancelAnimationFrame(raf);\n    calcTimeLeft();\n    let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\n    autoplayDelayTotal = swiper.params.autoplay.delay;\n    autoplayDelayCurrent = swiper.params.autoplay.delay;\n    const currentSlideDelay = getSlideDelay();\n    if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\n      delay = currentSlideDelay;\n      autoplayDelayTotal = currentSlideDelay;\n      autoplayDelayCurrent = currentSlideDelay;\n    }\n    autoplayTimeLeft = delay;\n    const speed = swiper.params.speed;\n    const proceed = () => {\n      if (!swiper || swiper.destroyed) return;\n      if (swiper.params.autoplay.reverseDirection) {\n        if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n          swiper.slidePrev(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n          emit('autoplay');\n        }\n      } else {\n        if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n          swiper.slideNext(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, speed, true, true);\n          emit('autoplay');\n        }\n      }\n      if (swiper.params.cssMode) {\n        autoplayStartTime = new Date().getTime();\n        requestAnimationFrame(() => {\n          run();\n        });\n      }\n    };\n    if (delay > 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        proceed();\n      }, delay);\n    } else {\n      requestAnimationFrame(() => {\n        proceed();\n      });\n    }\n\n    // eslint-disable-next-line\n    return delay;\n  };\n  const start = () => {\n    swiper.autoplay.running = true;\n    run();\n    emit('autoplayStart');\n  };\n  const stop = () => {\n    swiper.autoplay.running = false;\n    clearTimeout(timeout);\n    cancelAnimationFrame(raf);\n    emit('autoplayStop');\n  };\n  const pause = (internal, reset) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    clearTimeout(timeout);\n    if (!internal) {\n      pausedByInteraction = true;\n    }\n    const proceed = () => {\n      emit('autoplayPause');\n      if (swiper.params.autoplay.waitForTransition) {\n        swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\n      } else {\n        resume();\n      }\n    };\n    swiper.autoplay.paused = true;\n    if (reset) {\n      if (slideChanged) {\n        autoplayTimeLeft = swiper.params.autoplay.delay;\n      }\n      slideChanged = false;\n      proceed();\n      return;\n    }\n    const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n    autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n    if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n    proceed();\n  };\n  const resume = () => {\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n    autoplayStartTime = new Date().getTime();\n    if (pausedByInteraction) {\n      pausedByInteraction = false;\n      run(autoplayTimeLeft);\n    } else {\n      run();\n    }\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n  };\n  const onVisibilityChange = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    const document = getDocument();\n    if (document.visibilityState === 'hidden') {\n      pausedByInteraction = true;\n      pause(true);\n    }\n    if (document.visibilityState === 'visible') {\n      resume();\n    }\n  };\n  const onPointerEnter = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByInteraction = true;\n    pause(true);\n  };\n  const onPointerLeave = e => {\n    if (e.pointerType !== 'mouse') return;\n    if (swiper.autoplay.paused) {\n      resume();\n    }\n  };\n  const attachMouseEvents = () => {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.el.addEventListener('pointerenter', onPointerEnter);\n      swiper.el.addEventListener('pointerleave', onPointerLeave);\n    }\n  };\n  const detachMouseEvents = () => {\n    swiper.el.removeEventListener('pointerenter', onPointerEnter);\n    swiper.el.removeEventListener('pointerleave', onPointerLeave);\n  };\n  const attachDocumentEvents = () => {\n    const document = getDocument();\n    document.addEventListener('visibilitychange', onVisibilityChange);\n  };\n  const detachDocumentEvents = () => {\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  };\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      attachMouseEvents();\n      attachDocumentEvents();\n      autoplayStartTime = new Date().getTime();\n      start();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n    detachDocumentEvents();\n    if (swiper.autoplay.running) {\n      stop();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (internal || !swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n      return;\n    }\n    isTouched = true;\n    pausedByTouch = false;\n    pausedByInteraction = false;\n    touchStartTimeout = setTimeout(() => {\n      pausedByInteraction = true;\n      pausedByTouch = true;\n      pause(true);\n    }, 200);\n  });\n  on('touchEnd', () => {\n    if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n    clearTimeout(touchStartTimeout);\n    clearTimeout(timeout);\n    if (swiper.params.autoplay.disableOnInteraction) {\n      pausedByTouch = false;\n      isTouched = false;\n      return;\n    }\n    if (pausedByTouch && swiper.params.cssMode) resume();\n    pausedByTouch = false;\n    isTouched = false;\n  });\n  on('slideChange', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    slideChanged = true;\n  });\n  Object.assign(swiper.autoplay, {\n    start,\n    stop,\n    pause,\n    resume\n  });\n}\n\nexport { Autoplay as default };\n","/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object' && 'constructor' in obj && obj.constructor === Object;\n}\nfunction extend(target, src) {\n  if (target === void 0) {\n    target = {};\n  }\n  if (src === void 0) {\n    src = {};\n  }\n  Object.keys(src).forEach(key => {\n    if (typeof target[key] === 'undefined') target[key] = src[key];else if (isObject(src[key]) && isObject(target[key]) && Object.keys(src[key]).length > 0) {\n      extend(target[key], src[key]);\n    }\n  });\n}\nconst ssrDocument = {\n  body: {},\n  addEventListener() {},\n  removeEventListener() {},\n  activeElement: {\n    blur() {},\n    nodeName: ''\n  },\n  querySelector() {\n    return null;\n  },\n  querySelectorAll() {\n    return [];\n  },\n  getElementById() {\n    return null;\n  },\n  createEvent() {\n    return {\n      initEvent() {}\n    };\n  },\n  createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute() {},\n      getElementsByTagName() {\n        return [];\n      }\n    };\n  },\n  createElementNS() {\n    return {};\n  },\n  importNode() {\n    return null;\n  },\n  location: {\n    hash: '',\n    host: '',\n    hostname: '',\n    href: '',\n    origin: '',\n    pathname: '',\n    protocol: '',\n    search: ''\n  }\n};\nfunction getDocument() {\n  const doc = typeof document !== 'undefined' ? document : {};\n  extend(doc, ssrDocument);\n  return doc;\n}\nconst ssrWindow = {\n  document: ssrDocument,\n  navigator: {\n    userAgent: ''\n  },\n  location: {\n    hash: '',\n    host: '',\n    hostname: '',\n    href: '',\n    origin: '',\n    pathname: '',\n    protocol: '',\n    search: ''\n  },\n  history: {\n    replaceState() {},\n    pushState() {},\n    go() {},\n    back() {}\n  },\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener() {},\n  removeEventListener() {},\n  getComputedStyle() {\n    return {\n      getPropertyValue() {\n        return '';\n      }\n    };\n  },\n  Image() {},\n  Date() {},\n  screen: {},\n  setTimeout() {},\n  clearTimeout() {},\n  matchMedia() {\n    return {};\n  },\n  requestAnimationFrame(callback) {\n    if (typeof setTimeout === 'undefined') {\n      callback();\n      return null;\n    }\n    return setTimeout(callback, 0);\n  },\n  cancelAnimationFrame(id) {\n    if (typeof setTimeout === 'undefined') {\n      return;\n    }\n    clearTimeout(id);\n  }\n};\nfunction getWindow() {\n  const win = typeof window !== 'undefined' ? window : {};\n  extend(win, ssrWindow);\n  return win;\n}\n\nexport { getWindow as a, getDocument as g };\n","import { a as getWindow, g as getDocument } from './ssr-window.esm.mjs';\n\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {\n      // no getter for object\n    }\n    try {\n      delete object[key];\n    } catch (e) {\n      // something got wrong\n    }\n  });\n}\nfunction nextTick(callback, delay) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n  return setTimeout(callback, delay);\n}\nfunction now() {\n  return Date.now();\n}\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n  if (!style) {\n    style = el.style;\n  }\n  return style;\n}\nfunction getTranslate(el, axis) {\n  if (axis === void 0) {\n    axis = 'x';\n  }\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el);\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    }\n    // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n  return curTransform || 0;\n}\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction extend() {\n  const to = Object(arguments.length <= 0 ? undefined : arguments[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  for (let i = 1; i < arguments.length; i += 1) {\n    const nextSource = i < 0 || arguments.length <= i ? undefined : arguments[i];\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n  return to;\n}\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\nfunction animateCSSModeScroll(_ref) {\n  let {\n    swiper,\n    targetPosition,\n    side\n  } = _ref;\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n  const animate = () => {\n    time = new Date().getTime();\n    if (startTime === null) {\n      startTime = time;\n    }\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n  animate();\n}\nfunction getSlideTransformEl(slideEl) {\n  return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowRoot && slideEl.shadowRoot.querySelector('.swiper-slide-transform') || slideEl;\n}\nfunction elementChildren(element, selector) {\n  if (selector === void 0) {\n    selector = '';\n  }\n  return [...element.children].filter(el => el.matches(selector));\n}\nfunction createElement(tag, classes) {\n  if (classes === void 0) {\n    classes = [];\n  }\n  const el = document.createElement(tag);\n  el.classList.add(...(Array.isArray(classes) ? classes : [classes]));\n  return el;\n}\nfunction elementOffset(el) {\n  const window = getWindow();\n  const document = getDocument();\n  const box = el.getBoundingClientRect();\n  const body = document.body;\n  const clientTop = el.clientTop || body.clientTop || 0;\n  const clientLeft = el.clientLeft || body.clientLeft || 0;\n  const scrollTop = el === window ? window.scrollY : el.scrollTop;\n  const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n  return {\n    top: box.top + scrollTop - clientTop,\n    left: box.left + scrollLeft - clientLeft\n  };\n}\nfunction elementPrevAll(el, selector) {\n  const prevEls = [];\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if (prev.matches(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return prevEls;\n}\nfunction elementNextAll(el, selector) {\n  const nextEls = [];\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if (next.matches(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return nextEls;\n}\nfunction elementStyle(el, prop) {\n  const window = getWindow();\n  return window.getComputedStyle(el, null).getPropertyValue(prop);\n}\nfunction elementIndex(el) {\n  let child = el;\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\nfunction elementParents(el, selector) {\n  const parents = []; // eslint-disable-line\n  let parent = el.parentElement; // eslint-disable-line\n  while (parent) {\n    if (selector) {\n      if (parent.matches(selector)) parents.push(parent);\n    } else {\n      parents.push(parent);\n    }\n    parent = parent.parentElement;\n  }\n  return parents;\n}\nfunction elementTransitionEnd(el, callback) {\n  function fireCallBack(e) {\n    if (e.target !== el) return;\n    callback.call(el, e);\n    el.removeEventListener('transitionend', fireCallBack);\n  }\n  if (callback) {\n    el.addEventListener('transitionend', fireCallBack);\n  }\n}\nfunction elementOuterSize(el, size, includeMargins) {\n  const window = getWindow();\n  if (includeMargins) {\n    return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\n  }\n  return el.offsetWidth;\n}\n\nexport { elementParents as a, elementOffset as b, createElement as c, now as d, elementChildren as e, elementOuterSize as f, elementIndex as g, getTranslate as h, elementTransitionEnd as i, isObject as j, getSlideTransformEl as k, elementStyle as l, elementNextAll as m, nextTick as n, elementPrevAll as o, animateCSSModeScroll as p, extend as q, deleteProps as r, setCSSProperty as s };\n","import { a as getWindow, g as getDocument } from './ssr-window.esm.mjs';\nimport { a as elementParents, l as elementStyle, e as elementChildren, s as setCSSProperty, f as elementOuterSize, m as elementNextAll, o as elementPrevAll, h as getTranslate, p as animateCSSModeScroll, n as nextTick, d as now, q as extend, g as elementIndex, c as createElement, r as deleteProps } from './utils.mjs';\n\nlet support;\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && document.documentElement.style && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\n\nlet deviceCached;\nfunction calcDevice(_temp) {\n  let {\n    userAgent\n  } = _temp === void 0 ? {} : _temp;\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides) {\n  if (overrides === void 0) {\n    overrides = {};\n  }\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\n\nlet browser;\nfunction calcBrowser() {\n  const window = getWindow();\n  let needPerspectiveFix = false;\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n  return {\n    isSafari: needPerspectiveFix || isSafari(),\n    needPerspectiveFix,\n    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n  };\n}\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\n\nfunction Resize(_ref) {\n  let {\n    swiper,\n    on,\n    emit\n  } = _ref;\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(_ref2 => {\n          let {\n            contentBoxSize,\n            contentRect,\n            target\n          } = _ref2;\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}\n\nfunction Observer(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  const observers = [];\n  const window = getWindow();\n  const attach = function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.hostEl);\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.hostEl, {\n      childList: swiper.params.observeSlideChildren\n    });\n\n    // Observe wrapper\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}\n\n/* eslint-disable no-underscore-dangle */\n\nvar eventsEmitter = {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    function onceHandler() {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n  emit() {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n};\n\nfunction updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}\n\nfunction updateSlides() {\n  const swiper = this;\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    let slide;\n    if (slides[i]) slide = slides[i];\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap <= 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}\n\nfunction updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides[swiper.getSlideIndexByData(index)];\n    }\n    return swiper.slides[index];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}\n\nfunction updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  // eslint-disable-next-line\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n  }\n}\n\nfunction updateSlidesProgress(translate) {\n  if (translate === void 0) {\n    translate = this && this.translate || 0;\n  }\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideVisibleClass);\n  });\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  let spaceBetween = params.spaceBetween;\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiper.size;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides[i].classList.add(params.slideVisibleClass);\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}\n\nfunction updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n  });\n  let activeSlide;\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    activeSlide = slides[activeIndex];\n  }\n  if (activeSlide) {\n    // Active classes\n    activeSlide.classList.add(params.slideActiveClass);\n\n    // Next Slide\n    let nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !nextSlide) {\n      nextSlide = slides[0];\n    }\n    if (nextSlide) {\n      nextSlide.classList.add(params.slideNextClass);\n    }\n    // Prev Slide\n    let prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !prevSlide === 0) {\n      prevSlide = slides[slides.length - 1];\n    }\n    if (prevSlide) {\n      prevSlide.classList.add(params.slidePrevClass);\n    }\n  }\n  swiper.emitSlidesClasses();\n}\n\nconst processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nconst preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  if (swiper.params.grid && swiper.params.grid.rows > 1) {\n    const activeColumn = activeIndex;\n    const preloadColumns = [activeColumn - amount];\n    preloadColumns.push(...Array.from({\n      length: amount\n    }).map((_, i) => {\n      return activeColumn + slidesPerView + i;\n    }));\n    swiper.slides.forEach((slideEl, i) => {\n      if (preloadColumns.includes(slideEl.column)) unlazy(swiper, i);\n    });\n    return;\n  }\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind || swiper.params.loop) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex < activeIndex || realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(activeIndex - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && (i > slideIndexLastInView || i < activeIndex)) {\n        unlazy(swiper, i);\n      }\n    }\n  }\n};\n\nfunction getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nfunction updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.realIndex = getVirtualRealIndex(activeIndex);\n    }\n    return;\n  }\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (swiper.slides[activeIndex]) {\n    realIndex = parseInt(swiper.slides[activeIndex].getAttribute('data-swiper-slide-index') || activeIndex, 10);\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    previousSnapIndex,\n    snapIndex,\n    previousRealIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}\n\nfunction updateClickedSlide(e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = e.closest(`.${params.slideClass}, swiper-slide`);\n  let slideFound = false;\n  let slideIndex;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};\n\nfunction getSwiperTranslate(axis) {\n  if (axis === void 0) {\n    axis = this.isHorizontal() ? 'x' : 'y';\n  }\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  currentTranslate += swiper.cssOverflowAdjustment();\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}\n\nfunction setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    if (swiper.isHorizontal()) {\n      x -= swiper.cssOverflowAdjustment();\n    } else {\n      y -= swiper.cssOverflowAdjustment();\n    }\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate() {\n  return -this.snapGrid[0];\n}\n\nfunction maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}\n\nfunction translateTo(translate, speed, runCallbacks, translateBounds, internal) {\n  if (translate === void 0) {\n    translate = 0;\n  }\n  if (speed === void 0) {\n    speed = this.params.speed;\n  }\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  if (translateBounds === void 0) {\n    translateBounds = true;\n  }\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n  return true;\n}\n\nvar translate = {\n  getTranslate: getSwiperTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};\n\nfunction setTransition(duration, byController) {\n  const swiper = this;\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n  }\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionEmit(_ref) {\n  let {\n    swiper,\n    runCallbacks,\n    direction,\n    step\n  } = _ref;\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n  swiper.emit(`transition${step}`);\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}\n\nfunction transitionStart(runCallbacks, direction) {\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}\n\nfunction transitionEnd(runCallbacks, direction) {\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};\n\nfunction slideTo(index, speed, runCallbacks, internal, initial) {\n  if (index === void 0) {\n    index = 0;\n  }\n  if (speed === void 0) {\n    speed = this.params.speed;\n  }\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n    return false;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && (rtl ? translate > swiper.translate && translate > swiper.minTranslate() : translate < swiper.translate && translate < swiper.minTranslate())) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // Update Index\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}\n\nfunction slideToLoop(index, speed, runCallbacks, internal) {\n  if (index === void 0) {\n    index = 0;\n  }\n  if (speed === void 0) {\n    speed = this.params.speed;\n  }\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      newIndex = swiper.getSlideIndexByData(newIndex);\n    }\n  }\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext(speed, runCallbacks, internal) {\n  if (speed === void 0) {\n    speed = this.params.speed;\n  }\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev(speed, runCallbacks, internal) {\n  if (speed === void 0) {\n    speed = this.params.speed;\n  }\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset(speed, runCallbacks, internal) {\n  if (speed === void 0) {\n    speed = this.params.speed;\n  }\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest(speed, runCallbacks, internal, threshold) {\n  if (speed === void 0) {\n    speed = this.params.speed;\n  }\n  if (runCallbacks === void 0) {\n    runCallbacks = true;\n  }\n  if (threshold === void 0) {\n    threshold = 0.5;\n  }\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};\n\nfunction loopCreate(slideRealIndex) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  slides.forEach((el, index) => {\n    el.setAttribute('data-swiper-slide-index', index);\n  });\n  swiper.loopFix({\n    slideRealIndex,\n    direction: params.centeredSlides ? undefined : 'next'\n  });\n}\n\nfunction loopFix(_temp) {\n  let {\n    slideRealIndex,\n    slideTo = true,\n    direction,\n    setTranslate,\n    activeSlideIndex,\n    byController,\n    byMousewheel\n  } = _temp === void 0 ? {} : _temp;\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!params.centeredSlides && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));\n  let loopedSlides = params.loopedSlides || slidesPerView;\n  if (loopedSlides % params.slidesPerGroup !== 0) {\n    loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;\n  }\n  swiper.loopedSlides = loopedSlides;\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  let activeIndex = swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(swiper.slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  // prepend last slides before start\n  if (activeSlideIndex < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeSlideIndex, params.slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeSlideIndex; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      prependSlidesIndexes.push(slides.length - index - 1);\n    }\n  } else if (activeSlideIndex /* + slidesPerView */ > swiper.slides.length - loopedSlides * 2) {\n    slidesAppended = Math.max(activeSlideIndex - (swiper.slides.length - loopedSlides * 2), params.slidesPerGroup);\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      appendSlidesIndexes.push(index);\n    }\n  }\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      swiper.slides[index].swiperLoopMoveDOM = true;\n      slidesEl.prepend(swiper.slides[index]);\n      swiper.slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      swiper.slides[index].swiperLoopMoveDOM = true;\n      slidesEl.append(swiper.slides[index]);\n      swiper.slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  swiper.recalcSlides();\n  if (params.slidesPerView === 'auto') {\n    swiper.updateSlides();\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n            swiper.touchEventsData.currentTranslate = swiper.translate;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          swiper.slideToLoop(slideRealIndex, 0, false, true);\n          swiper.touchEventsData.currentTranslate = swiper.translate;\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n            swiper.touchEventsData.currentTranslate = swiper.translate;\n          }\n        }\n      } else {\n        swiper.slideToLoop(slideRealIndex, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      slideTo: false,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix(loopParams);\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix(loopParams);\n    }\n  }\n  swiper.emit('loopFix');\n}\n\nfunction loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};\n\nfunction setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}\n\nfunction unsetGrabCursor() {\n  const swiper = this;\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor\n};\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base) {\n  if (base === void 0) {\n    base = this;\n  }\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nfunction onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  data.evCache.push(event);\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!swiper.wrapperEl.contains(targetEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = event.composedPath ? event.composedPath() : event.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n  if (pointerIndex >= 0) data.evCache[pointerIndex] = e;\n  const targetTouch = data.evCache.length > 1 ? data.evCache[0] : e;\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        prevX: swiper.touches.currentX,\n        prevY: swiper.touches.currentY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling || swiper.zoom && swiper.params.zoom && swiper.params.zoom.enabled && data.evCache.length > 1) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  if (!data.isMoved) {\n    if (isLoop) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  let loopFixed;\n  if (data.isMoved && prevTouchesDirection !== swiper.touchesDirection && isLoop && Math.abs(diff) >= 1) {\n    // need another loop fix\n    swiper.loopFix({\n      direction: swiper.swipeDirection,\n      setTranslate: true\n    });\n    loopFixed = true;\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0) {\n    if (isLoop && !loopFixed && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.size / 2 : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && !loopFixed && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.size / 2 : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\n  if (pointerIndex >= 0) {\n    data.evCache.splice(pointerIndex, 1);\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) {\n    const proceed = event.type === 'pointercancel' && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = params.virtual && params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(swiper.autoplay.resizeTimeout);\n    swiper.autoplay.resizeTimeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, false);\n}\n\nfunction onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n  if (swiper.params.cssMode || swiper.params.slidesPerView !== 'auto' && !swiper.params.autoHeight) {\n    return;\n  }\n  swiper.update();\n}\n\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n\n  // Touch Events\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n\n  // Images loader\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\nfunction attachEvents() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  if (!dummyEventAttached) {\n    document.addEventListener('touchstart', dummyEventListener);\n    dummyEventAttached = true;\n  }\n  events(swiper, 'on');\n}\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\nvar events$1 = {\n  attachEvents,\n  detachEvents\n};\n\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nfunction setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    if (typeof breakpointParams[prop] === 'undefined') return;\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate(realIndex);\n    swiper.updateSlides();\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}\n\nfunction getBreakpoint(breakpoints, base, containerEl) {\n  if (base === void 0) {\n    base = 'window';\n  }\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = {\n  setBreakpoint,\n  getBreakpoint\n};\n\nfunction prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\nfunction addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}\n\nfunction removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}\n\nvar classes = {\n  addClasses,\n  removeClasses\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\nvar checkOverflow$1 = {\n  checkOverflow\n};\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopedSlides: null,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};\n\nfunction moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj) {\n    if (obj === void 0) {\n      obj = {};\n    }\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        auto: true\n      };\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}\n\n/* eslint no-param-reassign: \"off\" */\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events: events$1,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes\n};\nconst extendedDefaults = {};\nclass Swiper {\n  constructor() {\n    let el;\n    let params;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      // eslint-disable-next-line no-constructor-return\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      cssOverflowAdjustment() {\n        // Returns 0 unless `translate` is > 2**23\n        // Should be subtracted from css values to prevent overflow\n        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n      },\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        evCache: []\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    // eslint-disable-next-line no-constructor-return\n    return swiper;\n  }\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\n  }\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n  slidesPerViewDynamic(view, exact) {\n    if (view === void 0) {\n      view = 'current';\n    }\n    if (exact === void 0) {\n      exact = false;\n    }\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex] ? slides[activeIndex].swiperSlideSize : 0;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (params.freeMode && params.freeMode.enabled && !params.cssMode) {\n      setTranslate();\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !params.centeredSlides) {\n        const slides = swiper.virtual && params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\n        translated = swiper.slideTo(slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  changeDirection(newDirection, needUpdate) {\n    if (needUpdate === void 0) {\n      needUpdate = true;\n    }\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n    swiper.update();\n  }\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    let el = element || swiper.params.el;\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n    if (!el) {\n      return false;\n    }\n    el.swiper = swiper;\n    if (el.parentNode && el.parentNode.host && el.parentNode.host.nodeName === 'SWIPER-CONTAINER') {\n      swiper.isElement = true;\n    }\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector());\n        // Children needs to return slot items\n        return res;\n      }\n      return elementChildren(el, getWrapperSelector())[0];\n    };\n    // Find Wrapper\n    let wrapperEl = getWrapper();\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement && !el.parentNode.host.slideSlots ? el.parentNode.host : wrapperEl,\n      hostEl: swiper.isElement ? el.parentNode.host : el,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Attach events\n    swiper.attachEvents();\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper);\n\n    // Init Flag\n    swiper.initialized = true;\n    preload(swiper);\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n  destroy(deleteInstance, cleanStyles) {\n    if (deleteInstance === void 0) {\n      deleteInstance = true;\n    }\n    if (cleanStyles === void 0) {\n      cleanStyles = true;\n    }\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      el.removeAttribute('style');\n      wrapperEl.removeAttribute('style');\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n    if (deleteInstance !== false) {\n      swiper.el.swiper = null;\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\n\nexport { Swiper as S, defaults as d };\n","/* underscore in name -> watch for changes */\nconst paramsList = ['eventsPrefix', 'injectStyles', 'injectStylesUrls', 'modules', 'init', '_direction', 'oneWayMovement', 'touchEventsTarget', 'initialSlide', '_speed', 'cssMode', 'updateOnWindowResize', 'resizeObserver', 'nested', 'focusableElements', '_enabled', '_width', '_height', 'preventInteractionOnTransition', 'userAgent', 'url', '_edgeSwipeDetection', '_edgeSwipeThreshold', '_freeMode', '_autoHeight', 'setWrapperSize', 'virtualTranslate', '_effect', 'breakpoints', '_spaceBetween', '_slidesPerView', 'maxBackfaceHiddenSlides', '_grid', '_slidesPerGroup', '_slidesPerGroupSkip', '_slidesPerGroupAuto', '_centeredSlides', '_centeredSlidesBounds', '_slidesOffsetBefore', '_slidesOffsetAfter', 'normalizeSlideIndex', '_centerInsufficientSlides', '_watchOverflow', 'roundLengths', 'touchRatio', 'touchAngle', 'simulateTouch', '_shortSwipes', '_longSwipes', 'longSwipesRatio', 'longSwipesMs', '_followFinger', 'allowTouchMove', '_threshold', 'touchMoveStopPropagation', 'touchStartPreventDefault', 'touchStartForcePreventDefault', 'touchReleaseOnEdges', 'uniqueNavElements', '_resistance', '_resistanceRatio', '_watchSlidesProgress', '_grabCursor', 'preventClicks', 'preventClicksPropagation', '_slideToClickedSlide', '_loop', 'loopedSlides', 'loopPreventsSliding', '_rewind', '_allowSlidePrev', '_allowSlideNext', '_swipeHandler', '_noSwiping', 'noSwipingClass', 'noSwipingSelector', 'passiveListeners', 'containerModifierClass', 'slideClass', 'slideActiveClass', 'slideVisibleClass', 'slideNextClass', 'slidePrevClass', 'wrapperClass', 'lazyPreloaderClass', 'lazyPreloadPrevNext', 'runCallbacksOnInit', 'observer', 'observeParents', 'observeSlideChildren',\n// modules\n'a11y', '_autoplay', '_controller', 'coverflowEffect', 'cubeEffect', 'fadeEffect', 'flipEffect', 'creativeEffect', 'cardsEffect', 'hashNavigation', 'history', 'keyboard', 'mousewheel', '_navigation', '_pagination', 'parallax', '_scrollbar', '_thumbs', 'virtual', 'zoom', 'control'];\n\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\nfunction extend(target, src) {\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  Object.keys(src).filter(key => noExtend.indexOf(key) < 0).forEach(key => {\n    if (typeof target[key] === 'undefined') target[key] = src[key];else if (isObject(src[key]) && isObject(target[key]) && Object.keys(src[key]).length > 0) {\n      if (src[key].__swiper__) target[key] = src[key];else extend(target[key], src[key]);\n    } else {\n      target[key] = src[key];\n    }\n  });\n}\nfunction needsNavigation(params) {\n  if (params === void 0) {\n    params = {};\n  }\n  return params.navigation && typeof params.navigation.nextEl === 'undefined' && typeof params.navigation.prevEl === 'undefined';\n}\nfunction needsPagination(params) {\n  if (params === void 0) {\n    params = {};\n  }\n  return params.pagination && typeof params.pagination.el === 'undefined';\n}\nfunction needsScrollbar(params) {\n  if (params === void 0) {\n    params = {};\n  }\n  return params.scrollbar && typeof params.scrollbar.el === 'undefined';\n}\nfunction uniqueClasses(classNames) {\n  if (classNames === void 0) {\n    classNames = '';\n  }\n  const classes = classNames.split(' ').map(c => c.trim()).filter(c => !!c);\n  const unique = [];\n  classes.forEach(c => {\n    if (unique.indexOf(c) < 0) unique.push(c);\n  });\n  return unique.join(' ');\n}\nfunction attrToProp(attrName) {\n  if (attrName === void 0) {\n    attrName = '';\n  }\n  return attrName.replace(/-[a-z]/g, l => l.toUpperCase().replace('-', ''));\n}\nfunction wrapperClass(className) {\n  if (className === void 0) {\n    className = '';\n  }\n  if (!className) return 'swiper-wrapper';\n  if (!className.includes('swiper-wrapper')) return `swiper-wrapper ${className}`;\n  return className;\n}\n\nfunction updateSwiper(_ref) {\n  let {\n    swiper,\n    slides,\n    passedParams,\n    changedParams,\n    nextEl,\n    prevEl,\n    scrollbarEl,\n    paginationEl\n  } = _ref;\n  const updateParams = changedParams.filter(key => key !== 'children' && key !== 'direction' && key !== 'wrapperClass');\n  const {\n    params: currentParams,\n    pagination,\n    navigation,\n    scrollbar,\n    virtual,\n    thumbs\n  } = swiper;\n  let needThumbsInit;\n  let needControllerInit;\n  let needPaginationInit;\n  let needScrollbarInit;\n  let needNavigationInit;\n  let loopNeedDestroy;\n  let loopNeedEnable;\n  let loopNeedReloop;\n  if (changedParams.includes('thumbs') && passedParams.thumbs && passedParams.thumbs.swiper && currentParams.thumbs && !currentParams.thumbs.swiper) {\n    needThumbsInit = true;\n  }\n  if (changedParams.includes('controller') && passedParams.controller && passedParams.controller.control && currentParams.controller && !currentParams.controller.control) {\n    needControllerInit = true;\n  }\n  if (changedParams.includes('pagination') && passedParams.pagination && (passedParams.pagination.el || paginationEl) && (currentParams.pagination || currentParams.pagination === false) && pagination && !pagination.el) {\n    needPaginationInit = true;\n  }\n  if (changedParams.includes('scrollbar') && passedParams.scrollbar && (passedParams.scrollbar.el || scrollbarEl) && (currentParams.scrollbar || currentParams.scrollbar === false) && scrollbar && !scrollbar.el) {\n    needScrollbarInit = true;\n  }\n  if (changedParams.includes('navigation') && passedParams.navigation && (passedParams.navigation.prevEl || prevEl) && (passedParams.navigation.nextEl || nextEl) && (currentParams.navigation || currentParams.navigation === false) && navigation && !navigation.prevEl && !navigation.nextEl) {\n    needNavigationInit = true;\n  }\n  const destroyModule = mod => {\n    if (!swiper[mod]) return;\n    swiper[mod].destroy();\n    if (mod === 'navigation') {\n      if (swiper.isElement) {\n        swiper[mod].prevEl.remove();\n        swiper[mod].nextEl.remove();\n      }\n      currentParams[mod].prevEl = undefined;\n      currentParams[mod].nextEl = undefined;\n      swiper[mod].prevEl = undefined;\n      swiper[mod].nextEl = undefined;\n    } else {\n      if (swiper.isElement) {\n        swiper[mod].el.remove();\n      }\n      currentParams[mod].el = undefined;\n      swiper[mod].el = undefined;\n    }\n  };\n  if (changedParams.includes('loop') && swiper.isElement) {\n    if (currentParams.loop && !passedParams.loop) {\n      loopNeedDestroy = true;\n    } else if (!currentParams.loop && passedParams.loop) {\n      loopNeedEnable = true;\n    } else {\n      loopNeedReloop = true;\n    }\n  }\n  updateParams.forEach(key => {\n    if (isObject(currentParams[key]) && isObject(passedParams[key])) {\n      extend(currentParams[key], passedParams[key]);\n      if ((key === 'navigation' || key === 'pagination' || key === 'scrollbar') && 'enabled' in passedParams[key] && !passedParams[key].enabled) {\n        destroyModule(key);\n      }\n    } else {\n      const newValue = passedParams[key];\n      if ((newValue === true || newValue === false) && (key === 'navigation' || key === 'pagination' || key === 'scrollbar')) {\n        if (newValue === false) {\n          destroyModule(key);\n        }\n      } else {\n        currentParams[key] = passedParams[key];\n      }\n    }\n  });\n  if (updateParams.includes('controller') && !needControllerInit && swiper.controller && swiper.controller.control && currentParams.controller && currentParams.controller.control) {\n    swiper.controller.control = currentParams.controller.control;\n  }\n  if (changedParams.includes('children') && slides && virtual && currentParams.virtual.enabled) {\n    virtual.slides = slides;\n    virtual.update(true);\n  }\n  if (changedParams.includes('children') && slides && currentParams.loop) {\n    loopNeedReloop = true;\n  }\n  if (needThumbsInit) {\n    const initialized = thumbs.init();\n    if (initialized) thumbs.update(true);\n  }\n  if (needControllerInit) {\n    swiper.controller.control = currentParams.controller.control;\n  }\n  if (needPaginationInit) {\n    if (swiper.isElement && (!paginationEl || typeof paginationEl === 'string')) {\n      paginationEl = document.createElement('div');\n      paginationEl.classList.add('swiper-pagination');\n      swiper.el.appendChild(paginationEl);\n    }\n    if (paginationEl) currentParams.pagination.el = paginationEl;\n    pagination.init();\n    pagination.render();\n    pagination.update();\n  }\n  if (needScrollbarInit) {\n    if (swiper.isElement && (!scrollbarEl || typeof scrollbarEl === 'string')) {\n      scrollbarEl = document.createElement('div');\n      scrollbarEl.classList.add('swiper-scrollbar');\n      swiper.el.appendChild(scrollbarEl);\n    }\n    if (scrollbarEl) currentParams.scrollbar.el = scrollbarEl;\n    scrollbar.init();\n    scrollbar.updateSize();\n    scrollbar.setTranslate();\n  }\n  if (needNavigationInit) {\n    if (swiper.isElement) {\n      if (!nextEl || typeof nextEl === 'string') {\n        nextEl = document.createElement('div');\n        nextEl.classList.add('swiper-button-next');\n        nextEl.innerHTML = swiper.hostEl.nextButtonSvg;\n        swiper.el.appendChild(nextEl);\n      }\n      if (!prevEl || typeof prevEl === 'string') {\n        prevEl = document.createElement('div');\n        prevEl.classList.add('swiper-button-prev');\n        nextEl.innerHTML = swiper.hostEl.prevButtonSvg;\n        swiper.el.appendChild(prevEl);\n      }\n    }\n    if (nextEl) currentParams.navigation.nextEl = nextEl;\n    if (prevEl) currentParams.navigation.prevEl = prevEl;\n    navigation.init();\n    navigation.update();\n  }\n  if (changedParams.includes('allowSlideNext')) {\n    swiper.allowSlideNext = passedParams.allowSlideNext;\n  }\n  if (changedParams.includes('allowSlidePrev')) {\n    swiper.allowSlidePrev = passedParams.allowSlidePrev;\n  }\n  if (changedParams.includes('direction')) {\n    swiper.changeDirection(passedParams.direction, false);\n  }\n  if (loopNeedDestroy || loopNeedReloop) {\n    swiper.loopDestroy();\n  }\n  if (loopNeedEnable || loopNeedReloop) {\n    swiper.loopCreate();\n  }\n  swiper.update();\n}\n\nexport { needsPagination as a, needsScrollbar as b, attrToProp as c, uniqueClasses as d, extend as e, isObject as i, needsNavigation as n, paramsList as p, updateSwiper as u, wrapperClass as w };\n","/**\n * Swiper React 10.1.0\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2023 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: August 1, 2023\n */\n\nimport React, { useEffect, useLayoutEffect, useContext, createContext, forwardRef, useState, useRef } from 'react';\nimport { S as Swiper$1 } from './shared/swiper-core.mjs';\nimport { g as getParams, m as mountSwiper, a as getChangedParams, u as updateOnVirtualData } from './shared/update-on-virtual-data.mjs';\nimport { d as uniqueClasses, w as wrapperClass, n as needsNavigation, b as needsScrollbar, a as needsPagination, e as extend, u as updateSwiper } from './shared/update-swiper.mjs';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction isChildSwiperSlide(child) {\n  return child.type && child.type.displayName && child.type.displayName.includes('SwiperSlide');\n}\nfunction processChildren(c) {\n  const slides = [];\n  React.Children.toArray(c).forEach(child => {\n    if (isChildSwiperSlide(child)) {\n      slides.push(child);\n    } else if (child.props && child.props.children) {\n      processChildren(child.props.children).forEach(slide => slides.push(slide));\n    }\n  });\n  return slides;\n}\nfunction getChildren(c) {\n  const slides = [];\n  const slots = {\n    'container-start': [],\n    'container-end': [],\n    'wrapper-start': [],\n    'wrapper-end': []\n  };\n  React.Children.toArray(c).forEach(child => {\n    if (isChildSwiperSlide(child)) {\n      slides.push(child);\n    } else if (child.props && child.props.slot && slots[child.props.slot]) {\n      slots[child.props.slot].push(child);\n    } else if (child.props && child.props.children) {\n      const foundSlides = processChildren(child.props.children);\n      if (foundSlides.length > 0) {\n        foundSlides.forEach(slide => slides.push(slide));\n      } else {\n        slots['container-end'].push(child);\n      }\n    } else {\n      slots['container-end'].push(child);\n    }\n  });\n  return {\n    slides,\n    slots\n  };\n}\n\nfunction renderVirtual(swiper, slides, virtualData) {\n  if (!virtualData) return null;\n  const getSlideIndex = index => {\n    let slideIndex = index;\n    if (index < 0) {\n      slideIndex = slides.length + index;\n    } else if (slideIndex >= slides.length) {\n      // eslint-disable-next-line\n      slideIndex = slideIndex - slides.length;\n    }\n    return slideIndex;\n  };\n  const style = swiper.isHorizontal() ? {\n    [swiper.rtlTranslate ? 'right' : 'left']: `${virtualData.offset}px`\n  } : {\n    top: `${virtualData.offset}px`\n  };\n  const {\n    from,\n    to\n  } = virtualData;\n  const loopFrom = swiper.params.loop ? -slides.length : 0;\n  const loopTo = swiper.params.loop ? slides.length * 2 : slides.length;\n  const slidesToRender = [];\n  for (let i = loopFrom; i < loopTo; i += 1) {\n    if (i >= from && i <= to) {\n      slidesToRender.push(slides[getSlideIndex(i)]);\n    }\n  }\n  return slidesToRender.map((child, index) => {\n    return /*#__PURE__*/React.cloneElement(child, {\n      swiper,\n      style,\n      key: `slide-${index}`\n    });\n  });\n}\n\nfunction useIsomorphicLayoutEffect(callback, deps) {\n  // eslint-disable-next-line\n  if (typeof window === 'undefined') return useEffect(callback, deps);\n  return useLayoutEffect(callback, deps);\n}\n\nconst SwiperSlideContext = /*#__PURE__*/createContext(null);\nconst useSwiperSlide = () => {\n  return useContext(SwiperSlideContext);\n};\nconst SwiperContext = /*#__PURE__*/createContext(null);\nconst useSwiper = () => {\n  return useContext(SwiperContext);\n};\n\nconst Swiper = /*#__PURE__*/forwardRef(function (_temp, externalElRef) {\n  let {\n    className,\n    tag: Tag = 'div',\n    wrapperTag: WrapperTag = 'div',\n    children,\n    onSwiper,\n    ...rest\n  } = _temp === void 0 ? {} : _temp;\n  let eventsAssigned = false;\n  const [containerClasses, setContainerClasses] = useState('swiper');\n  const [virtualData, setVirtualData] = useState(null);\n  const [breakpointChanged, setBreakpointChanged] = useState(false);\n  const initializedRef = useRef(false);\n  const swiperElRef = useRef(null);\n  const swiperRef = useRef(null);\n  const oldPassedParamsRef = useRef(null);\n  const oldSlides = useRef(null);\n  const nextElRef = useRef(null);\n  const prevElRef = useRef(null);\n  const paginationElRef = useRef(null);\n  const scrollbarElRef = useRef(null);\n  const {\n    params: swiperParams,\n    passedParams,\n    rest: restProps,\n    events\n  } = getParams(rest);\n  const {\n    slides,\n    slots\n  } = getChildren(children);\n  const onBeforeBreakpoint = () => {\n    setBreakpointChanged(!breakpointChanged);\n  };\n  Object.assign(swiperParams.on, {\n    _containerClasses(swiper, classes) {\n      setContainerClasses(classes);\n    }\n  });\n  const initSwiper = () => {\n    // init swiper\n    Object.assign(swiperParams.on, events);\n    eventsAssigned = true;\n    const passParams = {\n      ...swiperParams\n    };\n    delete passParams.wrapperClass;\n    swiperRef.current = new Swiper$1(passParams);\n    if (swiperRef.current.virtual && swiperRef.current.params.virtual.enabled) {\n      swiperRef.current.virtual.slides = slides;\n      const extendWith = {\n        cache: false,\n        slides,\n        renderExternal: setVirtualData,\n        renderExternalUpdate: false\n      };\n      extend(swiperRef.current.params.virtual, extendWith);\n      extend(swiperRef.current.originalParams.virtual, extendWith);\n    }\n  };\n  if (!swiperElRef.current) {\n    initSwiper();\n  }\n\n  // Listen for breakpoints change\n  if (swiperRef.current) {\n    swiperRef.current.on('_beforeBreakpoint', onBeforeBreakpoint);\n  }\n  const attachEvents = () => {\n    if (eventsAssigned || !events || !swiperRef.current) return;\n    Object.keys(events).forEach(eventName => {\n      swiperRef.current.on(eventName, events[eventName]);\n    });\n  };\n  const detachEvents = () => {\n    if (!events || !swiperRef.current) return;\n    Object.keys(events).forEach(eventName => {\n      swiperRef.current.off(eventName, events[eventName]);\n    });\n  };\n  useEffect(() => {\n    return () => {\n      if (swiperRef.current) swiperRef.current.off('_beforeBreakpoint', onBeforeBreakpoint);\n    };\n  });\n\n  // set initialized flag\n  useEffect(() => {\n    if (!initializedRef.current && swiperRef.current) {\n      swiperRef.current.emitSlidesClasses();\n      initializedRef.current = true;\n    }\n  });\n\n  // mount swiper\n  useIsomorphicLayoutEffect(() => {\n    if (externalElRef) {\n      externalElRef.current = swiperElRef.current;\n    }\n    if (!swiperElRef.current) return;\n    if (swiperRef.current.destroyed) {\n      initSwiper();\n    }\n    mountSwiper({\n      el: swiperElRef.current,\n      nextEl: nextElRef.current,\n      prevEl: prevElRef.current,\n      paginationEl: paginationElRef.current,\n      scrollbarEl: scrollbarElRef.current,\n      swiper: swiperRef.current\n    }, swiperParams);\n    if (onSwiper) onSwiper(swiperRef.current);\n    // eslint-disable-next-line\n    return () => {\n      if (swiperRef.current && !swiperRef.current.destroyed) {\n        swiperRef.current.destroy(true, false);\n      }\n    };\n  }, []);\n\n  // watch for params change\n  useIsomorphicLayoutEffect(() => {\n    attachEvents();\n    const changedParams = getChangedParams(passedParams, oldPassedParamsRef.current, slides, oldSlides.current, c => c.key);\n    oldPassedParamsRef.current = passedParams;\n    oldSlides.current = slides;\n    if (changedParams.length && swiperRef.current && !swiperRef.current.destroyed) {\n      updateSwiper({\n        swiper: swiperRef.current,\n        slides,\n        passedParams,\n        changedParams,\n        nextEl: nextElRef.current,\n        prevEl: prevElRef.current,\n        scrollbarEl: scrollbarElRef.current,\n        paginationEl: paginationElRef.current\n      });\n    }\n    return () => {\n      detachEvents();\n    };\n  });\n\n  // update on virtual update\n  useIsomorphicLayoutEffect(() => {\n    updateOnVirtualData(swiperRef.current);\n  }, [virtualData]);\n\n  // bypass swiper instance to slides\n  function renderSlides() {\n    if (swiperParams.virtual) {\n      return renderVirtual(swiperRef.current, slides, virtualData);\n    }\n    return slides.map((child, index) => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        swiper: swiperRef.current,\n        swiperSlideIndex: index\n      });\n    });\n  }\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    ref: swiperElRef,\n    className: uniqueClasses(`${containerClasses}${className ? ` ${className}` : ''}`)\n  }, restProps), /*#__PURE__*/React.createElement(SwiperContext.Provider, {\n    value: swiperRef.current\n  }, slots['container-start'], /*#__PURE__*/React.createElement(WrapperTag, {\n    className: wrapperClass(swiperParams.wrapperClass)\n  }, slots['wrapper-start'], renderSlides(), slots['wrapper-end']), needsNavigation(swiperParams) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    ref: prevElRef,\n    className: \"swiper-button-prev\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: nextElRef,\n    className: \"swiper-button-next\"\n  })), needsScrollbar(swiperParams) && /*#__PURE__*/React.createElement(\"div\", {\n    ref: scrollbarElRef,\n    className: \"swiper-scrollbar\"\n  }), needsPagination(swiperParams) && /*#__PURE__*/React.createElement(\"div\", {\n    ref: paginationElRef,\n    className: \"swiper-pagination\"\n  }), slots['container-end']));\n});\nSwiper.displayName = 'Swiper';\n\nconst SwiperSlide = /*#__PURE__*/forwardRef(function (_temp, externalRef) {\n  let {\n    tag: Tag = 'div',\n    children,\n    className = '',\n    swiper,\n    zoom,\n    lazy,\n    virtualIndex,\n    swiperSlideIndex,\n    ...rest\n  } = _temp === void 0 ? {} : _temp;\n  const slideElRef = useRef(null);\n  const [slideClasses, setSlideClasses] = useState('swiper-slide');\n  const [lazyLoaded, setLazyLoaded] = useState(false);\n  function updateClasses(_s, el, classNames) {\n    if (el === slideElRef.current) {\n      setSlideClasses(classNames);\n    }\n  }\n  useIsomorphicLayoutEffect(() => {\n    if (typeof swiperSlideIndex !== 'undefined') {\n      slideElRef.current.swiperSlideIndex = swiperSlideIndex;\n    }\n    if (externalRef) {\n      externalRef.current = slideElRef.current;\n    }\n    if (!slideElRef.current || !swiper) {\n      return;\n    }\n    if (swiper.destroyed) {\n      if (slideClasses !== 'swiper-slide') {\n        setSlideClasses('swiper-slide');\n      }\n      return;\n    }\n    swiper.on('_slideClass', updateClasses);\n    // eslint-disable-next-line\n    return () => {\n      if (!swiper) return;\n      swiper.off('_slideClass', updateClasses);\n    };\n  });\n  useIsomorphicLayoutEffect(() => {\n    if (swiper && slideElRef.current && !swiper.destroyed) {\n      setSlideClasses(swiper.getSlideClasses(slideElRef.current));\n    }\n  }, [swiper]);\n  const slideData = {\n    isActive: slideClasses.indexOf('swiper-slide-active') >= 0,\n    isVisible: slideClasses.indexOf('swiper-slide-visible') >= 0,\n    isPrev: slideClasses.indexOf('swiper-slide-prev') >= 0,\n    isNext: slideClasses.indexOf('swiper-slide-next') >= 0\n  };\n  const renderChildren = () => {\n    return typeof children === 'function' ? children(slideData) : children;\n  };\n  const onLoad = () => {\n    setLazyLoaded(true);\n  };\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    ref: slideElRef,\n    className: uniqueClasses(`${slideClasses}${className ? ` ${className}` : ''}`),\n    \"data-swiper-slide-index\": virtualIndex,\n    onLoad: onLoad\n  }, rest), zoom && /*#__PURE__*/React.createElement(SwiperSlideContext.Provider, {\n    value: slideData\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"swiper-zoom-container\",\n    \"data-swiper-zoom\": typeof zoom === 'number' ? zoom : undefined\n  }, renderChildren(), lazy && !lazyLoaded && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"swiper-lazy-preloader\"\n  }))), !zoom && /*#__PURE__*/React.createElement(SwiperSlideContext.Provider, {\n    value: slideData\n  }, renderChildren(), lazy && !lazyLoaded && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"swiper-lazy-preloader\"\n  })));\n});\nSwiperSlide.displayName = 'SwiperSlide';\n\nexport { Swiper, SwiperSlide, useSwiper, useSwiperSlide };\n","import { e as extend, p as paramsList, i as isObject, n as needsNavigation, a as needsPagination, b as needsScrollbar } from './update-swiper.mjs';\nimport { d as defaults } from './swiper-core.mjs';\n\nfunction getParams(obj, splitEvents) {\n  if (obj === void 0) {\n    obj = {};\n  }\n  if (splitEvents === void 0) {\n    splitEvents = true;\n  }\n  const params = {\n    on: {}\n  };\n  const events = {};\n  const passedParams = {};\n  extend(params, defaults);\n  params._emitClasses = true;\n  params.init = false;\n  const rest = {};\n  const allowedParams = paramsList.map(key => key.replace(/_/, ''));\n  const plainObj = Object.assign({}, obj);\n  Object.keys(plainObj).forEach(key => {\n    if (typeof obj[key] === 'undefined') return;\n    if (allowedParams.indexOf(key) >= 0) {\n      if (isObject(obj[key])) {\n        params[key] = {};\n        passedParams[key] = {};\n        extend(params[key], obj[key]);\n        extend(passedParams[key], obj[key]);\n      } else {\n        params[key] = obj[key];\n        passedParams[key] = obj[key];\n      }\n    } else if (key.search(/on[A-Z]/) === 0 && typeof obj[key] === 'function') {\n      if (splitEvents) {\n        events[`${key[2].toLowerCase()}${key.substr(3)}`] = obj[key];\n      } else {\n        params.on[`${key[2].toLowerCase()}${key.substr(3)}`] = obj[key];\n      }\n    } else {\n      rest[key] = obj[key];\n    }\n  });\n  ['navigation', 'pagination', 'scrollbar'].forEach(key => {\n    if (params[key] === true) params[key] = {};\n    if (params[key] === false) delete params[key];\n  });\n  return {\n    params,\n    passedParams,\n    rest,\n    events\n  };\n}\n\nfunction mountSwiper(_ref, swiperParams) {\n  let {\n    el,\n    nextEl,\n    prevEl,\n    paginationEl,\n    scrollbarEl,\n    swiper\n  } = _ref;\n  if (needsNavigation(swiperParams) && nextEl && prevEl) {\n    swiper.params.navigation.nextEl = nextEl;\n    swiper.originalParams.navigation.nextEl = nextEl;\n    swiper.params.navigation.prevEl = prevEl;\n    swiper.originalParams.navigation.prevEl = prevEl;\n  }\n  if (needsPagination(swiperParams) && paginationEl) {\n    swiper.params.pagination.el = paginationEl;\n    swiper.originalParams.pagination.el = paginationEl;\n  }\n  if (needsScrollbar(swiperParams) && scrollbarEl) {\n    swiper.params.scrollbar.el = scrollbarEl;\n    swiper.originalParams.scrollbar.el = scrollbarEl;\n  }\n  swiper.init(el);\n}\n\nfunction getChangedParams(swiperParams, oldParams, children, oldChildren, getKey) {\n  const keys = [];\n  if (!oldParams) return keys;\n  const addKey = key => {\n    if (keys.indexOf(key) < 0) keys.push(key);\n  };\n  if (children && oldChildren) {\n    const oldChildrenKeys = oldChildren.map(getKey);\n    const childrenKeys = children.map(getKey);\n    if (oldChildrenKeys.join('') !== childrenKeys.join('')) addKey('children');\n    if (oldChildren.length !== children.length) addKey('children');\n  }\n  const watchParams = paramsList.filter(key => key[0] === '_').map(key => key.replace(/_/, ''));\n  watchParams.forEach(key => {\n    if (key in swiperParams && key in oldParams) {\n      if (isObject(swiperParams[key]) && isObject(oldParams[key])) {\n        const newKeys = Object.keys(swiperParams[key]);\n        const oldKeys = Object.keys(oldParams[key]);\n        if (newKeys.length !== oldKeys.length) {\n          addKey(key);\n        } else {\n          newKeys.forEach(newKey => {\n            if (swiperParams[key][newKey] !== oldParams[key][newKey]) {\n              addKey(key);\n            }\n          });\n          oldKeys.forEach(oldKey => {\n            if (swiperParams[key][oldKey] !== oldParams[key][oldKey]) addKey(key);\n          });\n        }\n      } else if (swiperParams[key] !== oldParams[key]) {\n        addKey(key);\n      }\n    }\n  });\n  return keys;\n}\n\nconst updateOnVirtualData = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params.virtual || swiper.params.virtual && !swiper.params.virtual.enabled) return;\n  swiper.updateSlides();\n  swiper.updateProgress();\n  swiper.updateSlidesClasses();\n  if (swiper.parallax && swiper.params.parallax && swiper.params.parallax.enabled) {\n    swiper.parallax.setTranslate();\n  }\n};\n\nexport { getChangedParams as a, getParams as g, mountSwiper as m, updateOnVirtualData as u };\n"],"names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","Array","isArray","map","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","Object","tkeys","j","ok","nk","length","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","type","ret","len","this","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","set","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","height","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","cache","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","Set","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","useOffsetPos","shadowRoot","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","items","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_index_","_value_","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","getBasePixel","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","sort","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","edge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","gcLen","garbageCollect","valueAt","idx","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","console","error","warn","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","setStyle","lineCap","lineJoin","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_fullLoop","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","colorizer","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","borderRadius","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","findOrAddLabel","addedLabels","unshift","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","swiper","originalParams","checkProps","createElements","auto","className","append","Navigation","_ref","extendParams","on","emit","navigation","nextEl","prevEl","hideOnClick","disabledClass","hiddenClass","lockClass","navigationDisabledClass","makeElementsArray","getEl","isElement","querySelector","querySelectorAll","uniqueNavElements","toggleEl","subEl","classList","tagName","watchOverflow","isLocked","isBeginning","rewind","isEnd","onPrevClick","preventDefault","slidePrev","onNextClick","slideNext","initButton","destroyButton","disable","_s","targetEl","pagination","clickable","isHidden","toggle","enable","classesToSelector","classes","trim","Pagination","pfx","bulletSize","bulletElement","renderBullet","renderProgressbar","renderFraction","renderCustom","progressbarOpposite","dynamicBullets","dynamicMainBullets","formatFractionCurrent","formatFractionTotal","bulletClass","bulletActiveClass","modifierClass","currentClass","totalClass","progressbarFillClass","progressbarOppositeClass","clickableClass","horizontalClass","verticalClass","paginationDisabledClass","bullets","dynamicBulletIndex","isPaginationDisabled","setSideBullets","bulletEl","onBulletClick","closest","slidesPerGroup","realIndex","newSlideIndex","getSlideIndexByData","currentSlideIndex","slides","loopedSlides","loopFix","activeSlideIndex","slideTo","slideToLoop","previousIndex","slidesLength","virtual","snapGrid","previousRealIndex","snapIndex","previousSnapIndex","activeIndex","firstIndex","lastIndex","midIndex","classesToRemove","flat","bullet","bulletIndex","firstDisplayedBullet","lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","offsetProp","subElIndex","fractionEl","textContent","totalEl","progressbarDirection","scaleX","scaleY","progressEl","transform","transitionDuration","speed","innerHTML","paginationHTML","numberOfBullets","freeMode","A11y","a11y","notificationClass","prevSlideMessage","nextSlideMessage","firstSlideMessage","lastSlideMessage","paginationBulletMessage","slideLabelMessage","containerMessage","containerRoleDescriptionMessage","itemRoleDescriptionMessage","slideRole","clicked","liveRegion","message","notification","makeElFocusable","makeElNotFocusable","addElRole","role","addElRoleDescription","description","addElLabel","disableEl","enableEl","onEnterOrSpaceKey","keyCode","click","hasPagination","hasClickablePagination","initNavEl","wrapperId","controls","addElControls","handlePointerDown","handlePointerUp","destroyed","handleFocus","slideEl","slideClass","isActive","isVisible","watchSlidesProgress","visibleSlides","sourceCapabilities","firesTouchEvents","scrollLeft","scrollTop","initSlides","slideIndex","containerEl","wrapperEl","repeat","random","live","autoplay","addElLive","updateNavigation","updatePagination","Autoplay","raf","paused","timeLeft","waitForTransition","disableOnInteraction","stopOnLastSlide","reverseDirection","pauseOnMouseEnter","autoplayTimeLeft","wasPaused","isTouched","pausedByTouch","touchStartTimeout","slideChanged","pausedByInteraction","autoplayDelayTotal","autoplayDelayCurrent","autoplayStartTime","getTime","onTransitionEnd","resume","calcTimeLeft","run","delayForce","cancelAnimationFrame","currentSlideDelay","activeSlideEl","getSlideDelay","proceed","cssMode","pause","internal","onVisibilityChange","visibilityState","onPointerEnter","pointerType","onPointerLeave","extend","src","ssrDocument","activeElement","blur","nodeName","createEvent","initEvent","createElement","children","childNodes","getElementsByTagName","createElementNS","importNode","location","hash","hostname","href","origin","pathname","protocol","search","getDocument","doc","ssrWindow","navigator","userAgent","history","replaceState","pushState","go","back","CustomEvent","Image","screen","matchMedia","getWindow","win","deleteProps","nextTick","getTranslate","matrix","curTransform","transformMatrix","curStyle","currentStyle","WebKitCSSMatrix","webkitTransform","MozTransform","OTransform","MsTransform","msTransform","m41","m42","noExtend","nextSource","HTMLElement","nodeType","keysArray","nextIndex","nextKey","desc","__swiper__","setCSSProperty","varName","varValue","animateCSSModeScroll","targetPosition","side","startPosition","time","startTime","scrollSnapType","cssModeFrameID","isOutOfBound","animate","easeProgress","currentPosition","scrollTo","overflow","elementChildren","selector","tag","elementPrevAll","prevEls","previousElementSibling","elementNextAll","nextEls","nextElementSibling","elementStyle","elementIndex","child","previousSibling","elementParents","parents","parentElement","elementOuterSize","includeMargins","offsetWidth","support","deviceCached","browser","getSupport","smoothScroll","documentElement","touch","DocumentTouch","calcSupport","getDevice","_temp","ua","device","ios","android","screenWidth","screenHeight","ipad","ipod","iphone","windows","macos","os","calcDevice","getBrowser","needPerspectiveFix","isSafari","isWebView","test","calcBrowser","eventsEmitter","priority","self","eventsListeners","once","onceHandler","off","__emitterProxy","_len","_key","onAny","eventsAnyListeners","offAny","eventHandler","_len2","_key2","processLazyPreloader","imageEl","lazyEl","lazyPreloaderClass","unlazy","preload","amount","lazyPreloadPrevNext","slidesPerView","slidesPerViewDynamic","rows","activeColumn","preloadColumns","_","column","slideIndexLastInView","updateSize","isVertical","updateSlides","getDirectionLabel","getDirectionPropertyValue","slidesEl","swiperSize","rtlTranslate","wrongRTL","isVirtual","previousSlidesLength","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginRight","marginBottom","marginTop","centeredSlides","gridEnabled","slideSize","shouldResetSlideSize","breakpoints","slide","updateSlide","slideStyles","currentTransform","currentWebKitTransform","roundLengths","swiperSlideSize","slidesPerGroupSkip","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","groups","slidesBefore","slidesAfter","groupSize","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesOffset","addToSnapGrid","addToSlidesGrid","checkOverflow","updateSlidesOffset","backFaceHiddenClass","containerModifierClass","hasClassBackfaceClassAdded","maxBackfaceHiddenSlides","updateAutoHeight","activeSlides","setTransition","getSlideByIndex","offsetHeight","minusOffset","offsetTop","swiperSlideOffset","cssOverflowAdjustment","updateSlidesProgress","offsetCenter","slideVisibleClass","visibleSlidesIndexes","slideOffset","slideProgress","minTranslate","originalSlideProgress","slideBefore","slideAfter","originalProgress","updateProgress","multiplier","translatesDiff","maxTranslate","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","firstSlideIndex","lastSlideIndex","firstSlideTranslate","lastSlideTranslate","translateMax","translateAbs","autoHeight","updateSlidesClasses","getFilteredSlide","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","nextSlide","prevSlide","emitSlidesClasses","updateActiveIndex","newActiveIndex","getVirtualRealIndex","aIndex","normalizeSlideIndex","getActiveIndexByTranslate","initialized","runCallbacksOnInit","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","previousTranslate","translateTo","runCallbacks","translateBounds","animating","preventInteractionOnTransition","newTranslate","isH","behavior","onTranslateToWrapperTransitionEnd","transitionEmit","normalizedTranslate","normalizedGrid","normalizedGridNext","allowSlideNext","allowSlidePrev","transitionStart","transitionEnd","_immediateVirtual","_cssModeVirtualInitialSet","initialSlide","onSlideToWrapperTransitionEnd","newIndex","perGroup","slidesPerGroupAuto","loopPreventsSliding","_clientLeft","clientLeft","normalizedSnapGrid","prevSnap","prevSnapIndex","prevIndex","slideReset","slideToClosest","threshold","currentSnap","slideToIndex","slideSelector","getSlideIndex","loopCreate","slideRealIndex","byMousewheel","prependSlidesIndexes","appendSlidesIndexes","isNext","isPrev","slidesPrepended","slidesAppended","swiperLoopMoveDOM","prepend","recalcSlides","currentSlideTranslate","touchEventsData","control","loopParams","loopDestroy","newSlidesOrder","swiperSlideIndex","onTouchStart","evCache","simulateTouch","originalEvent","touchEventsTarget","which","button","isMoved","swipingClassHasValue","noSwipingClass","eventPath","composedPath","noSwipingSelector","isTargetShadow","noSwiping","__closestFrom","assignedSlot","found","getRootNode","closestElement","allowClick","swipeHandler","currentX","pageX","currentY","pageY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","innerWidth","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","focusableElements","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","onTouchMove","pointerIndex","cachedEv","pointerId","targetTouch","preventedByNestedSwiper","prevY","touchReleaseOnEdges","targetTouches","diffX","diffY","touchAngle","zoom","touchMoveStopPropagation","nested","stopPropagation","touchesDiff","previousX","previousY","oneWayMovement","touchRatio","prevTouchesDirection","touchesDirection","isLoop","startTranslate","evt","bubbles","dispatchEvent","allowMomentumBounce","grabCursor","setGrabCursor","loopFixed","disableParentSwiper","resistanceRatio","resistance","followFinger","onTouchEnd","touchEndTime","timeDiff","pathTree","lastClickTime","currentPos","stopIndex","rewindFirstIndex","rewindLastIndex","longSwipesMs","longSwipes","longSwipesRatio","shortSwipes","setBreakpoint","isVirtualLoop","resizeTimeout","preventClicks","preventClicksPropagation","stopImmediatePropagation","onScroll","onLoad","dummyEventAttached","dummyEventListener","capture","domMethod","swiperMethod","updateOnWindowResize","isGridEnabled","resizeObserver","url","breakpointsBase","passiveListeners","wrapperClass","_emitClasses","moduleExtendParams","allModulesParams","moduleParamName","moduleParams","prototypes","moving","__preventObserver__","unsetGrabCursor","attachEvents","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointParams","wasMultiRow","isMultiRow","wasEnabled","emitContainerClasses","wasModuleEnabled","isModuleEnabled","directionChanged","needsReLoop","changeDirection","isEnabled","currentHeight","innerHeight","minRatio","substr","wasLocked","lastSlideRightEdge","addClasses","classNames","suffixes","resultClasses","prepareClasses","removeClasses","extendedDefaults","Swiper","swipers","newParams","modules","__modules__","mod","swiperParams","passedParams","eventName","velocity","trunc","clickTimeout","velocities","imagesToLoad","imagesLoaded","setProgress","cls","getSlideClasses","updates","view","exact","spv","breakLoop","translateValue","translated","newDirection","needUpdate","currentDirection","changeLanguageDirection","mount","mounted","getWrapperSelector","getWrapper","slideSlots","hostEl","deleteInstance","cleanStyles","newDefaults","module","installModule","prototypeGroup","protoMethod","use","animationFrame","resizeHandler","orientationChangeHandler","_ref2","contentBoxSize","inlineSize","blockSize","unobserve","observers","WebkitMutationObserver","mutations","observerUpdate","attributes","characterData","observeParents","observeSlideChildren","containerParents","paramsList","needsNavigation","needsPagination","needsScrollbar","scrollbar","uniqueClasses","unique","_extends","isChildSwiperSlide","displayName","processChildren","getChildren","slots","slot","foundSlides","useIsomorphicLayoutEffect","deps","useEffect","useLayoutEffect","SwiperSlideContext","SwiperContext","forwardRef","externalElRef","Tag","wrapperTag","WrapperTag","onSwiper","rest","eventsAssigned","containerClasses","setContainerClasses","useState","virtualData","setVirtualData","breakpointChanged","setBreakpointChanged","initializedRef","useRef","swiperElRef","swiperRef","oldPassedParamsRef","oldSlides","nextElRef","prevElRef","paginationElRef","scrollbarElRef","restProps","splitEvents","allowedParams","plainObj","getParams","onBeforeBreakpoint","_containerClasses","initSwiper","passParams","extendWith","renderExternal","renderExternalUpdate","paginationEl","scrollbarEl","mountSwiper","changedParams","oldParams","oldChildren","getKey","addKey","oldChildrenKeys","childrenKeys","newKeys","oldKeys","newKey","oldKey","getChangedParams","updateParams","currentParams","thumbs","needThumbsInit","needControllerInit","needPaginationInit","needScrollbarInit","needNavigationInit","loopNeedDestroy","loopNeedEnable","loopNeedReloop","destroyModule","newValue","appendChild","nextButtonSvg","prevButtonSvg","updateSwiper","parallax","ref","Provider","loopFrom","loopTo","slidesToRender","renderVirtual","SwiperSlide","externalRef","lazy","virtualIndex","slideElRef","slideClasses","setSlideClasses","lazyLoaded","setLazyLoaded","updateClasses","slideData","renderChildren"],"sourceRoot":""}