{"version":3,"file":"static/js/Login.eea8a87d.chunk.js","mappings":"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","sources":["webpack://buysaleacademy/./src/hooks/useNotification.ts","webpack://buysaleacademy/./src/pages/ProfilePage/helper/login.ts","webpack://buysaleacademy/./src/pages/ProfilePage/components/LoginPage/login.module.scss?f9a5","webpack://buysaleacademy/./src/pages/ProfilePage/components/LoginPage/LoginPage.tsx","webpack://buysaleacademy/./src/pages/ProfilePage/hook/userLogin.ts","webpack://buysaleacademy/./src/pages/ProfilePage/ui/FormBtn/form-btn.module.scss?f7e3","webpack://buysaleacademy/./src/pages/ProfilePage/ui/FormBtn/FormBtn.tsx","webpack://buysaleacademy/./src/pages/ProfilePage/ui/InputAndError/InputAneError.tsx","webpack://buysaleacademy/./src/pages/ProfilePage/ui/PasswordInput/PadLockIcon/PadLockClose.tsx","webpack://buysaleacademy/./src/pages/ProfilePage/ui/PasswordInput/PadLockIcon/PadLockOpen.tsx","webpack://buysaleacademy/./src/pages/ProfilePage/ui/PasswordInput/password-input.module.scss?3d3e","webpack://buysaleacademy/./src/pages/ProfilePage/ui/PasswordInput/PasswordInput.tsx"],"sourcesContent":["import { addNotification } from \"@src/pages/Container/store/action/notificationActions\";\nimport { useDispatch } from \"react-redux\";\nimport { useId } from \"react\";\nconst useNotification = () => {\n    const id = useId() + String(Date.now()) + String(Math.random());\n    const dispatch = useDispatch();\n    return ({ type, body, }) => {\n        dispatch(addNotification({\n            id,\n            type,\n            body\n        }));\n    };\n};\nexport { useNotification };\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport axios from \"axios\";\nconst baseURL = 'http://localhost:8000';\nconst axiosConfig = {\n    method: 'post',\n    baseURL,\n    timeout: 5000,\n};\nfunction login(url, data) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const req = yield axios.post(url, data, Object.assign({}, axiosConfig));\n            return req.data;\n        }\n        catch (err) {\n            const error = err;\n            if (error.code === '403') {\n                return {\n                    name: 'Неверный логин или пароль, попробуйте снова!',\n                    code: error.code\n                };\n            }\n            else if (error.response) {\n                // The request was made and the server responded with a status code\n                // that falls out of the range of 2xx\n                return {\n                    name: 'Произошла ошибка, повторите попытку позже',\n                    code: error.code,\n                };\n            }\n            else if (error.request) {\n                // The request was made but no response was received\n                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n                // http.ClientRequest in node.js\n                return {\n                    name: error.name,\n                    code: error.code,\n                };\n            }\n            else {\n                // Something happened in setting up the request that triggered an Error\n                return {\n                    name: 'Произошла ошибка, повторите попытку позже',\n                    code: error.code,\n                };\n            }\n        }\n    });\n}\nexport { login };\n","// extracted by mini-css-extract-plugin\nexport default {\"login\":\"pages-ProfilePage-components-LoginPage-login__login\",\"login_form\":\"pages-ProfilePage-components-LoginPage-login__login_form\",\"login_link\":\"pages-ProfilePage-components-LoginPage-login__login_link\",\"link_container\":\"pages-ProfilePage-components-LoginPage-login__link_container\"};","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { login } from '../../helper/login';\nimport FormBtn from '../../ui/FormBtn/FormBtn';\nimport { useLogin } from '../../hook/userLogin';\nimport { Link, useNavigate } from 'react-router-dom';\nimport InputAndError from '../../ui/InputAndError/InputAneError';\nimport PasswordInput from '../../ui/PasswordInput/PasswordInput';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport style from './login.module.scss';\nimport '@style/form-style.scss';\nimport { useNotification } from '@src/hooks/useNotification';\nconst LoginPage = () => {\n    const methods = useForm({\n        mode: 'all',\n        defaultValues: {\n            telephone: '',\n            password: '',\n        }\n    });\n    const { handleSubmit, } = methods;\n    const navigate = useNavigate();\n    const userLogin = useLogin();\n    const setNotification = useNotification();\n    const onSubmit = (data) => {\n        login('/api/login', {\n            login: data.telephone,\n            password: data.password,\n        })\n            .then(data => {\n            if ('access' in data) {\n                userLogin(data.access);\n                setNotification({\n                    body: 'Вы успешно авторизировались',\n                    type: 'accept'\n                });\n                navigate('/user');\n            }\n            else {\n                setNotification({\n                    body: data.name,\n                    type: 'error',\n                });\n            }\n        })\n            .catch(e => console.log(e));\n    };\n    return (_jsx(\"section\", Object.assign({ className: style.login }, { children: _jsxs(FormProvider, Object.assign({}, methods, { children: [_jsxs(\"form\", Object.assign({ className: ['form', style.login_form].join(' '), onSubmit: handleSubmit(onSubmit) }, { children: [_jsx(\"h1\", { children: \"\\u0412\\u0445\\u043E\\u0434\" }), _jsx(InputAndError, { type: 'text', name: 'telephone', label: 'Почта или номер телефона', required: 'Пожалуйста введите почту или номер телефона' }), _jsx(PasswordInput, { name: 'password', label: 'Пароль', required: 'Пожалуйста введите пароль' }), _jsx(FormBtn, { text: 'Войти' })] })), _jsxs(\"div\", Object.assign({ className: style.link_container }, { children: [_jsx(Link, Object.assign({ to: '/', className: style.login_link }, { children: \"\\u0417\\u0430\\u0431\\u044B\\u043B\\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C?\" })), _jsx(Link, Object.assign({ to: '/registration', className: style.login_link }, { children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0435\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\" }))] }))] })) })));\n};\nexport default LoginPage;\n","import { useDispatch } from 'react-redux';\nimport { loginUser } from '../store/action/userActions';\nconst useLogin = () => {\n    const dispatch = useDispatch();\n    return (accessToken) => {\n        localStorage.setItem('accessToken', accessToken);\n        dispatch(loginUser({\n            accessToken\n        }));\n    };\n};\nexport { useLogin, };\n","// extracted by mini-css-extract-plugin\nexport default {\"form_btn\":\"pages-ProfilePage-ui-FormBtn-form-btn__form_btn\"};","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport style from './form-btn.module.scss';\nconst FormBtn = ({ text }) => {\n    return (_jsx(\"input\", { value: text, type: 'submit', className: style.form_btn }));\n};\nexport default FormBtn;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useFormContext } from 'react-hook-form';\nimport '@style/form-style.scss';\nconst reg = /./;\nconst InputAndError = ({ name, label, type, required, pattern = reg, message = '', }) => {\n    var _a;\n    const methods = useFormContext();\n    const { register, formState: { errors, } } = methods;\n    // const className = [style.input, isValid ? style.input_valid : style.input_invalid].join(' ');\n    return (_jsxs(\"div\", { children: [_jsxs(\"label\", { children: [label, _jsx(\"br\", {}), _jsx(\"input\", Object.assign({ type: type, className: 'input' }, register(name, {\n                        required,\n                        pattern: {\n                            value: pattern,\n                            message: message,\n                        }\n                    })))] }), _jsx(\"p\", Object.assign({ className: 'error_message' }, { children: (_a = errors[name]) === null || _a === void 0 ? void 0 : _a.message }))] }));\n};\nexport default InputAndError;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nconst PadLockClose = () => {\n    return (_jsx(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", width: \"20\", height: \"32\", viewBox: \"0 0 384 512\" }, { children: _jsx(\"path\", { fill: \"currentColor\", d: \"M192 0q-52 0-90 38t-38 90v64q-27 0-45.5 18.5T0 \\r\\n          256v192q0 27 18.5 45.5T64 512h256q27 0 45.5-18.5T384 \\r\\n          448V256q0-27-18.5-45.5T320 192v-64q0-52-38-90T192 \\r\\n          0zm149 256v192q0 21-21 21H64q-21 0-21-21V256q0-21 \\r\\n          21-21h256q21 0 21 21zm-234-64v-64q0-35 25-60t60-25t60 \\r\\n          25t25 60v64H107zm85 64q-27 0-45.5 18.5T128 320q0 20 \\r\\n          12 36.5t31 23.5v25q0 22 21 22t21-22v-25q43-15 \\r\\n          43-60q0-27-18.5-45.5T192 256zm0 85q-21 0-21-21t21-21t21 \\r\\n          21t-21 21z\" }) })));\n};\nexport default PadLockClose;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nconst PadLockOpen = () => {\n    return (_jsx(\"svg\", Object.assign({ xmlns: \"http://www.w3.org/2000/svg\", width: \"20\", height: \"32\", viewBox: \"0 0 384 512\" }, { children: _jsx(\"path\", { fill: \"currentColor\", d: \"M192 43q35 0 60 25t25 60q0 21 22 21q21 0 21-21q0-52-38-90T192 \\r\\n          0t-90 38t-38 90v64q-27 0-45.5 18.5T0 256v192q0 27 18.5 45.5T64 \\r\\n          512h256q27 0 45.5-18.5T384 448V256q0-27-18.5-45.5T320 \\r\\n          192H107v-64q0-35 25-60t60-25zm128 192q21 0 21 21v192q0 21-21 \\r\\n          21H64q-21 0-21-21V256q0-21 21-21h256zM171 380v25q0 22 21 \\r\\n          22t21-22v-25q43-15 43-60q0-27-18.5-45.5T192 256t-45.5 18.5T128 \\r\\n          320q0 20 12 36.5t31 23.5zm21-81q21 0 21 21t-21 21t-21-21t21-21z\" }) })));\n};\nexport default PadLockOpen;\n","// extracted by mini-css-extract-plugin\nexport default {\"password\":\"pages-ProfilePage-ui-PasswordInput-password-input__password\",\"password_input\":\"pages-ProfilePage-ui-PasswordInput-password-input__password_input\",\"switch\":\"pages-ProfilePage-ui-PasswordInput-password-input__switch\",\"switch_input\":\"pages-ProfilePage-ui-PasswordInput-password-input__switch_input\"};","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport PadLockClose from './PadLockIcon/PadLockClose';\nimport PadLockOpen from './PadLockIcon/PadLockOpen';\nimport style from './password-input.module.scss';\nimport '@style/form-style.scss';\nconst reg = /^[a-zA-Z0-9=+-_@!?$%]{8,}$/;\nconst PasswordInput = ({ name, label, required, pattern = reg, message = 'Пароль должен состоять из 8 символов a-z, A-Z, 0-9, _, -, @, +, =, ?, !, $, %', }) => {\n    var _a;\n    const [switchShow, setSwitchShow] = useState('password');\n    const onSwitch = () => {\n        if (switchShow === 'text')\n            setSwitchShow('password');\n        else\n            setSwitchShow('text');\n    };\n    const methods = useFormContext();\n    const { register, formState: { errors, } } = methods;\n    // const className = [style.input, isValid ? style.input_valid : style.input_invalid].join(' ');\n    return (_jsxs(\"div\", Object.assign({ className: style.password }, { children: [_jsxs(\"label\", { children: [label, _jsx(\"br\", {}), _jsx(\"input\", Object.assign({ className: style.password_input, type: switchShow }, register(name, {\n                        required,\n                        pattern: {\n                            value: pattern,\n                            message: message,\n                        }\n                    }))), _jsxs(\"label\", Object.assign({ className: style.switch }, { children: [_jsx(\"input\", { type: 'checkbox', onChange: onSwitch, className: style.switch_input }), switchShow === 'text'\n                                ? _jsx(PadLockOpen, {})\n                                : _jsx(PadLockClose, {})] }))] }), _jsx(\"p\", Object.assign({ className: 'error_message' }, { children: (_a = errors[name]) === null || _a === void 0 ? void 0 : _a.message }))] })));\n};\nexport default PasswordInput;\n"],"names":["useNotification","id","useId","String","Date","now","Math","random","dispatch","useDispatch","_ref","type","body","addNotification","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","axiosConfig","method","baseURL","timeout","LoginPage","methods","useForm","mode","defaultValues","telephone","password","handleSubmit","navigate","useNavigate","userLogin","useLogin","setNotification","_jsx","Object","assign","className","style","children","_jsxs","FormProvider","join","onSubmit","data","url","this","axios","err","error","code","name","response","request","login","access","catch","console","log","InputAndError","label","required","PasswordInput","FormBtn","text","Link","to","accessToken","localStorage","setItem","loginUser","reg","pattern","message","_a","useFormContext","register","formState","errors","PadLockClose","xmlns","width","height","viewBox","fill","d","PadLockOpen","switchShow","setSwitchShow","useState","onChange","onSwitch"],"sourceRoot":""}