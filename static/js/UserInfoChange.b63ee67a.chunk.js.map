{"version":3,"file":"static/js/UserInfoChange.b63ee67a.chunk.js","mappings":"yLACA,QAA+B,sEAA/B,EAAsH,wECqBtH,EAjBuBA,KACnB,MAAMC,GAAUC,EAAAA,EAAAA,IAAQ,CACpBC,KAAM,MACNC,cAAe,CACXC,UAAW,GACXC,SAAU,GACVC,WAAY,GACZC,MAAO,GACPC,UAAW,OAGb,aAAEC,GAAkBT,EAI1B,OAAQU,EAAAA,EAAAA,KAAKC,EAAAA,GAAcC,OAAOC,OAAO,CAAC,EAAGb,EAAS,CAAEc,UAAUC,EAAAA,EAAAA,MAAM,OAAQH,OAAOC,OAAO,CAAEG,UAAWC,EAAoBC,SAAUT,GAHvHU,IACdC,QAAQC,IAAIF,EAAK,KAE8I,CAAEL,SAAU,EAACJ,EAAAA,EAAAA,KAAK,KAAME,OAAOC,OAAO,CAAEG,UAAWC,GAAwB,CAAEH,SAAU,wBAAyGJ,EAAAA,EAAAA,KAAKY,EAAAA,EAAe,CAAEC,MAAO,MAAOC,KAAM,OAAQC,KAAM,YAAaC,SAAU,iCAAkChB,EAAAA,EAAAA,KAAKY,EAAAA,EAAe,CAAEC,MAAO,UAAWC,KAAM,OAAQC,KAAM,WAAYC,SAAU,qCAAsChB,EAAAA,EAAAA,KAAKY,EAAAA,EAAe,CAAEC,MAAO,WAAYC,KAAM,OAAQC,KAAM,gBAAiBf,EAAAA,EAAAA,KAAK,KAAME,OAAOC,OAAO,CAAEG,UAAWC,GAAwB,CAAEH,SAAU,wBAAyGJ,EAAAA,EAAAA,KAAKY,EAAAA,EAAe,CAAEC,MAAO,iBAAkBC,KAAM,MAAOC,KAAM,YAAaC,SAAU,4CAA6ChB,EAAAA,EAAAA,KAAKY,EAAAA,EAAe,CAAEC,MAAO,oBAAqBC,KAAM,QAASC,KAAM,QAASC,SAAU,mCAAoChB,EAAAA,EAAAA,KAAKiB,EAAAA,EAAS,CAAEC,KAAM,6BAAgC,C,gDCnB3oC,QAA2B,kDCI3B,EAHgBC,IAAc,IAAb,KAAED,GAAMC,EACrB,OAAQnB,EAAAA,EAAAA,KAAK,QAAS,CAAEoB,MAAOF,EAAMJ,KAAM,SAAUR,UAAWC,GAAiB,C,kECArF,MAAMc,EAAM,IAcZ,EAbsBF,IAAmE,IAAlE,KAAEJ,EAAI,MAAEF,EAAK,KAAEC,EAAI,SAAEE,EAAQ,QAAEM,EAAUD,EAAG,QAAEE,EAAU,IAAKJ,EAChF,IAAIK,EACJ,MAAMlC,GAAUmC,EAAAA,EAAAA,OACV,SAAEC,EAAUC,WAAW,OAAEC,IAActC,EAE7C,OAAQe,EAAAA,EAAAA,MAAM,MAAO,CAAED,SAAU,EAACC,EAAAA,EAAAA,MAAM,QAAS,CAAED,SAAU,CAACS,GAAOb,EAAAA,EAAAA,KAAK,KAAM,CAAC,IAAIA,EAAAA,EAAAA,KAAK,QAASE,OAAOC,OAAO,CAAEW,KAAMA,EAAMR,UAAW,SAAWoB,EAASX,EAAM,CAChJC,WACAM,QAAS,CACLF,MAAOE,EACPC,QAASA,WAEPvB,EAAAA,EAAAA,KAAK,IAAKE,OAAOC,OAAO,CAAEG,UAAW,iBAAmB,CAAEF,SAAkC,QAAvBoB,EAAKI,EAAOb,UAA0B,IAAPS,OAAgB,EAASA,EAAGD,aAAe,C","sources":["webpack://buysaleacademy/./src/pages/ProfilePage/components/UserInfoChange/user-info.module.scss?9a2d","webpack://buysaleacademy/./src/pages/ProfilePage/components/UserInfoChange/UserInfoChange.tsx","webpack://buysaleacademy/./src/pages/ProfilePage/ui/FormBtn/form-btn.module.scss?f7e3","webpack://buysaleacademy/./src/pages/ProfilePage/ui/FormBtn/FormBtn.tsx","webpack://buysaleacademy/./src/pages/ProfilePage/ui/InputAndError/InputAneError.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile_form\":\"pages-ProfilePage-components-UserInfoChange-user-info__profile_form\",\"profile_header\":\"pages-ProfilePage-components-UserInfoChange-user-info__profile_header\"};","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { FormProvider, useForm } from 'react-hook-form';\nimport InputAndError from '../../ui/InputAndError/InputAneError';\nimport FormBtn from '../../ui/FormBtn/FormBtn';\nimport style from './user-info.module.scss';\nconst UserInfoChange = () => {\n    const methods = useForm({\n        mode: 'all',\n        defaultValues: {\n            firstName: '',\n            lastName: '',\n            secondName: '',\n            email: '',\n            telephone: '',\n        }\n    });\n    const { handleSubmit, } = methods;\n    const onSubmit = (data) => {\n        console.log(data);\n    };\n    return (_jsx(FormProvider, Object.assign({}, methods, { children: _jsxs(\"form\", Object.assign({ className: style.profile_form, onSubmit: handleSubmit(onSubmit) }, { children: [_jsx(\"h2\", Object.assign({ className: style.profile_header }, { children: \"\\u041B\\u0438\\u0447\\u043D\\u0430\\u044F \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F\" })), _jsx(InputAndError, { label: 'Имя', type: 'text', name: 'firstName', required: 'Пожалуйста введите своё имя' }), _jsx(InputAndError, { label: 'Фамилия', type: 'text', name: 'lastName', required: 'Пожалуйста введите свою фамилию' }), _jsx(InputAndError, { label: 'Отчество', type: 'text', name: 'secondName' }), _jsx(\"h2\", Object.assign({ className: style.profile_header }, { children: \"\\u041A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442\\u043D\\u044B\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435\" })), _jsx(InputAndError, { label: 'Номер телефона', type: 'tel', name: 'telephone', required: 'Пожалуйста введите свой номер телефона' }), _jsx(InputAndError, { label: 'Электронная почта', type: 'email', name: 'email', required: 'Пожалуйста введите свою почту' }), _jsx(FormBtn, { text: 'Зарегистрироваться' })] })) })));\n};\nexport default UserInfoChange;\n","// extracted by mini-css-extract-plugin\nexport default {\"form_btn\":\"pages-ProfilePage-ui-FormBtn-form-btn__form_btn\"};","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport style from './form-btn.module.scss';\nconst FormBtn = ({ text }) => {\n    return (_jsx(\"input\", { value: text, type: 'submit', className: style.form_btn }));\n};\nexport default FormBtn;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useFormContext } from 'react-hook-form';\nimport '@style/form-style.scss';\nconst reg = /./;\nconst InputAndError = ({ name, label, type, required, pattern = reg, message = '', }) => {\n    var _a;\n    const methods = useFormContext();\n    const { register, formState: { errors, } } = methods;\n    // const className = [style.input, isValid ? style.input_valid : style.input_invalid].join(' ');\n    return (_jsxs(\"div\", { children: [_jsxs(\"label\", { children: [label, _jsx(\"br\", {}), _jsx(\"input\", Object.assign({ type: type, className: 'input' }, register(name, {\n                        required,\n                        pattern: {\n                            value: pattern,\n                            message: message,\n                        }\n                    })))] }), _jsx(\"p\", Object.assign({ className: 'error_message' }, { children: (_a = errors[name]) === null || _a === void 0 ? void 0 : _a.message }))] }));\n};\nexport default InputAndError;\n"],"names":["UserInfoChange","methods","useForm","mode","defaultValues","firstName","lastName","secondName","email","telephone","handleSubmit","_jsx","FormProvider","Object","assign","children","_jsxs","className","style","onSubmit","data","console","log","InputAndError","label","type","name","required","FormBtn","text","_ref","value","reg","pattern","message","_a","useFormContext","register","formState","errors"],"sourceRoot":""}